Index: src/actions/actionEditUser.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const FETCH_EDIT_USER = 'FETCH_EDIT_USER'\r\nexport const FETCH_EDIT_USER__SUCCESS = 'FETCH_EDIT_USER__SUCCESS'\r\nexport const FETCH_EDIT_USER__FAILURE = 'FETCH_EDIT_USER__FAILURE'\r\n\r\nexport const CHANGE_AVATAR_ACCOUNT_EDITING = 'CHANGE_AVATAR_ACCOUNT_EDITING'\r\nexport const CHANGE_AVATAR_ACCOUNT_EDITING__SUCCESS = 'CHANGE_AVATAR_ACCOUNT_EDITING__SUCCESS'\r\nexport const CHANGE_AVATAR_ACCOUNT_EDITING__FAILURE = 'CHANGE_AVATAR_ACCOUNT_EDITING__FAILURE'\r\n\r\nexport const SAVE_CHANGES_ACCOUNT_EDITING = 'SAVE_CHANGES_ACCOUNT_EDITING'\r\nexport const SAVE_CHANGES_ACCOUNT_EDITING__FAILURE = 'SAVE_CHANGES_ACCOUNT_EDITING__FAILURE'\r\n\r\nexport const SAVE_CHANGES_PROFILE_EDITING = 'SAVE_CHANGES_PROFILE_EDITING'\r\nexport const SAVE_CHANGES_PROFILE_EDITING__FAILURE = 'SAVE_CHANGES_PROFILE_EDITING__FAILURE'\r\n\r\nexport const SAVE_CHANGES_CONTACTS_EDITING = 'SAVE_CHANGES_CONTACTS_EDITING'\r\nexport const SAVE_CHANGES_CONTACTS_EDITING__FAILURE = 'SAVE_CHANGES_CONTACTS_EDITING__FAILURE'\r\n\r\nexport const SAVE_CHANGES_CAPABILITIES_EDITING = 'SAVE_CHANGES_CAPABILITIES_EDITING'\r\nexport const SAVE_CHANGES_CAPABILITIES_EDITING__FAILURE = 'SAVE_CHANGES_CAPABILITIES_EDITING__FAILURE'\r\n\r\nexport const fetchEditUser = id => (\r\n  {\r\n    type: FETCH_EDIT_USER,\r\n    payload: {\r\n      id,\r\n    },\r\n  })\r\n\r\n\r\nexport const changeAvatarAccountEditing = userSRCAvatarIMG => (\r\n  {\r\n    type: CHANGE_AVATAR_ACCOUNT_EDITING,\r\n    payload: {\r\n      userSRCAvatarIMG,\r\n    },\r\n  })\r\n\r\nexport const saveChangesAccountEditing = (userName, password, repeatPassword, userSRCAvatarIMG, id) => (\r\n  {\r\n    type: SAVE_CHANGES_ACCOUNT_EDITING,\r\n    payload: {\r\n      userName, password, repeatPassword, userSRCAvatarIMG, id,\r\n    },\r\n  })\r\n\r\n\r\nexport const saveChangesProfileEditing = (firstName, lastName, birthDate, email, address, gender, id) => (\r\n  {\r\n    type: SAVE_CHANGES_PROFILE_EDITING,\r\n    payload: {\r\n      firstName, lastName, birthDate, email, address, gender, id,\r\n    },\r\n  })\r\n\r\nexport const saveChangesContactsEditing = (company, githubLink, facebookLink, selectLanguage, fax, phoneArray, id) => (\r\n  {\r\n    type: SAVE_CHANGES_CONTACTS_EDITING,\r\n    payload: {\r\n      company,\r\n      githubLink,\r\n      facebookLink,\r\n      selectLanguage,\r\n      fax,\r\n      phoneArray,\r\n      id,\r\n    },\r\n  })\r\n\r\nexport const saveChangesCapabilitiesEditing = (selectSkills, textareaField, checkboxArt, checkboxSport,\r\n  checkboxJustWant, checkboxFemale, checkboxGuitar, checkboxWtf, id) => (\r\n  {\r\n    type: SAVE_CHANGES_CAPABILITIES_EDITING,\r\n    payload: {\r\n      selectSkills,\r\n      textareaField,\r\n      checkboxArt,\r\n      checkboxSport,\r\n      checkboxJustWant,\r\n      checkboxFemale,\r\n      checkboxGuitar,\r\n      checkboxWtf,\r\n      id,\r\n    },\r\n  })\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/actions/actionEditUser.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/actions/actionEditUser.js	(date 1558904736494)
Index: src/helpers/getEditUserIndexDB.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import db from '../db'\r\n\r\nexport const getEditUserIndexDB = id => db.usersDB.get(id)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/helpers/getEditUserIndexDB.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/helpers/getEditUserIndexDB.js	(date 1558904736494)
Index: src/components/userFormBox/UserFormBox.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport styles from './UserFormBox.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst UserFormBox = ({\r\n  handleSubmit, children, classForm,\r\n}) => (\r\n  <form className={cx('userFormBox', classForm)} onSubmit={handleSubmit}>\r\n    {children}\r\n  </form>\r\n)\r\n\r\nUserFormBox.propTypes = {\r\n  classForm: PropTypes.string,\r\n  children: PropTypes.array.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default UserFormBox\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/userFormBox/UserFormBox.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/userFormBox/UserFormBox.js	(date 1558904736494)
Index: src/helpers/getUsersIndexDB.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import db from '../db'\r\n\r\nexport const getUsersIndexDB = () => db.usersDB.toArray()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/helpers/getUsersIndexDB.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/helpers/getUsersIndexDB.js	(date 1558904736494)
Index: src/components/fieldForm/fieldTextareaCapabilities/FieldTextareaCapabilities.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport styles from './FieldTextareaCapabilities.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst FieldTextareaCapabilities = ({\r\n  label, input, meta: { touched, error }, idTextarea,\r\n}) => (\r\n  <div className={cx('fieldTextareaCapabilities')}>\r\n    <label htmlFor={idTextarea} >{label}</label>\r\n    <textarea\r\n      className={cx('fieldTextareaCapabilities__textarea',\r\n        { fieldTextareaCapabilities__textareaError: touched && error })}\r\n      id={idTextarea}\r\n      {...input}\r\n      onBlur={() => input.onBlur()}\r\n      onChange={input.onChange}\r\n      value={input.value}\r\n      rows='10'\r\n      cols='45'\r\n      name='text'\r\n      maxLength='300'\r\n    />\r\n    {touched && error && <p className={cx('fieldTextareaCapabilities__pError')}>{error}</p>}\r\n  </div>\r\n)\r\n\r\nFieldTextareaCapabilities.propTypes = {\r\n  idInput: PropTypes.string,\r\n  label: PropTypes.string,\r\n  input: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  idTextarea: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default FieldTextareaCapabilities\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldTextareaCapabilities/FieldTextareaCapabilities.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldTextareaCapabilities/FieldTextareaCapabilities.js	(date 1558904736494)
Index: src/components/fieldForm/fieldCheckboxCapabilities/FieldCheckboxCapabilities.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport styles from './FieldCheckboxCapabilities.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst FieldCheckboxCapabilities = ({\r\n  type, input, meta: { touched, error }, span, idCheckbox,\r\n}) => {\r\n  const changeValue = input.value ? '' : span\r\n  return (\r\n    <label htmlFor={idCheckbox} className={cx('checkboxCapabilities__label')}>\r\n      <input\r\n        id={idCheckbox}\r\n        className={cx('checkboxCapabilities__input')}\r\n        {...input}\r\n        type={type}\r\n        onBlur={() => input.onBlur()}\r\n        onChange={() => input.onChange(changeValue)}\r\n      />\r\n      <span className={cx('checkboxCapabilities__span')}>{span}</span>\r\n      {touched && error && <p className={cx('checkboxCapabilities__pError')}>{error}</p>}\r\n    </label>\r\n  )\r\n}\r\n\r\nFieldCheckboxCapabilities.propTypes = {\r\n  idCheckbox: PropTypes.string,\r\n  label: PropTypes.string,\r\n  span: PropTypes.string,\r\n  input: PropTypes.object.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default FieldCheckboxCapabilities\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldCheckboxCapabilities/FieldCheckboxCapabilities.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldCheckboxCapabilities/FieldCheckboxCapabilities.js	(date 1558904736494)
Index: src/components/fieldForm/fieldSelectCapabilities/FieldSelectCapabilities.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from 'react-select'\r\nimport classNames from 'classnames'\r\nimport styles from './FieldSelectCapabilities.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst options = [\r\n  { value: 'HTML', label: 'HTML' },\r\n  { value: 'CSS', label: 'CSS' },\r\n  { value: 'Javascript', label: 'Javascript' },\r\n  { value: 'React', label: 'React' },\r\n  { value: 'Angular', label: 'Angular' },\r\n  { value: 'jQuery', label: 'jQuery' },\r\n  { value: 'NodeJS', label: 'NodeJS' },\r\n  { value: 'Python', label: 'Python' },\r\n  { value: 'PHP', label: 'PHP' },\r\n  { value: 'Ruby On Rails', label: 'Ruby On Rails' },\r\n  { value: 'SQL', label: 'SQL' },\r\n  { value: 'BackboneJS', label: 'BackboneJS' },\r\n  { value: 'Web Design', label: 'Web Design' },\r\n  { value: 'Project management', label: 'Project management' },\r\n  { value: 'Git', label: 'Git' },\r\n  { value: 'Docker', label: 'Docker' },\r\n  { value: 'AWS Lambda', label: 'AWS Lambda' },\r\n  { value: 'Firebase', label: 'Firebase' },\r\n]\r\n\r\nconst FieldSelectCapabilities = ({\r\n  label, input, meta: { touched, error },\r\n}) => {\r\n  const colourStyles = {\r\n    multiValueRemove: styles => ({\r\n      ...styles,\r\n      backgroundColor: '#E7F0FF',\r\n      ':hover': {\r\n        backgroundColor: '#4E86E4',\r\n        color: 'white',\r\n      },\r\n    }),\r\n    multiValueLabel: styles => ({\r\n      ...styles,\r\n      backgroundColor: '#E7F0FF',\r\n      color: '#9BB0CB',\r\n    }),\r\n    control: styles => ({\r\n      ...styles,\r\n      width: '300px',\r\n      minHeight: '40px',\r\n      backgroundColor: 'white',\r\n      border: touched && error ? '1px solid #EB5757' : '1px solid #C1CFE0',\r\n      borderRadius: '0px',\r\n    }),\r\n    indicatorSeparator: styles => ({\r\n      ...styles,\r\n      backgroundColor: 'white',\r\n    }),\r\n    clearIndicator: styles => ({\r\n      ...styles,\r\n      position: 'absolute',\r\n      right: '-37px',\r\n    }),\r\n    container: styles => ({\r\n      ...styles,\r\n      color: '#657C9A',\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 400,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n    }),\r\n    menuList: styles => ({\r\n      ...styles,\r\n      height: '132px',\r\n    }),\r\n    menu: styles => ({\r\n      ...styles,\r\n      borderRadius: '0px',\r\n    }),\r\n    input: styles => ({\r\n      ...styles,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 500,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n      color: '#000000',\r\n    }),\r\n    placeholder: styles => ({\r\n      ...styles,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 400,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n      color: '#657C9A',\r\n    }),\r\n    singleValue: styles => ({\r\n      ...styles,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 500,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n      color: '#000000',\r\n    }),\r\n  }\r\n  return (\r\n    <label className={cx('selectCapabilities')}>\r\n      <span className={cx('selectCapabilities__label')}>{label}</span>\r\n      <Select\r\n        {...input}\r\n        onBlur={() => input.onBlur()}\r\n        onChange={input.onChange}\r\n        value={input.value}\r\n        isMulti\r\n        options={options}\r\n        styles={colourStyles}\r\n        className='basic-multi-select'\r\n      />\r\n      {touched && error && <p className={cx('selectCapabilities__pError')}>{error}</p>}\r\n    </label>\r\n  )\r\n}\r\n\r\nFieldSelectCapabilities.propTypes = {\r\n  label: PropTypes.string,\r\n  input: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nexport default FieldSelectCapabilities\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldSelectCapabilities/FieldSelectCapabilities.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldSelectCapabilities/FieldSelectCapabilities.js	(date 1558904736494)
Index: src/components/fieldForm/dateTimePickerProfile/DateTimePickerProfile.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport DatePicker from 'react-date-picker'\r\nimport styles from './DateTimePickerProfile.scss'\r\nimport { ReactComponent as CalendarIcon } from '../../../img/icon/calendar.svg'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst DateTimePickerProfile = ({ input, meta: { touched, error } }) => (\r\n  <Fragment>\r\n    <div className={cx('profile__birthDate')}>\r\n      <div className={cx('profile__birthDateWrapper')}>\r\n        <span className={cx('profile__birthDateLabel')}>Birth date</span>\r\n        <span className={cx('profile__birthDateSpan')}>*</span>\r\n      </div>\r\n      <DatePicker\r\n        format='dd/MM/yyyy'\r\n        clearIcon=''\r\n        calendarIcon={<CalendarIcon />}\r\n        className={cx('profile__datePicker', { profile__datePickerError: touched && error })}\r\n        isOpen\r\n        placeholder='DD/MM/YYYY'\r\n        locale='en'\r\n        {...input}\r\n        onBlur={() => input.onBlur()}\r\n        onChange={input.onChange}\r\n        value={input.value}\r\n        calendarClassName='profile__react-calendar'\r\n      />\r\n      {touched && error && <p className={cx('birthDate__error')}>{error}</p>}\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nDateTimePickerProfile.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default DateTimePickerProfile\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/dateTimePickerProfile/DateTimePickerProfile.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/dateTimePickerProfile/DateTimePickerProfile.js	(date 1558904736494)
Index: src/components/fieldForm/fieldSelectContacts/FieldSelectContacts.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport Select from 'react-select'\r\nimport styles from './FieldSelectContacts.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst options = [\r\n  { value: 'en', label: 'English, EN' },\r\n  { value: 'fr', label: 'French, FR' },\r\n  { value: 'es', label: 'Spanish, ES' },\r\n  { value: 'ar', label: 'Arabic, AR' },\r\n  { value: 'cmn', label: 'Mandarin, CMN' },\r\n  { value: 'ru', label: 'Russian, RU' },\r\n  { value: 'pt', label: 'Portuguese, PT' },\r\n  { value: 'de', label: 'German, DE' },\r\n  { value: 'ja', label: 'Japanese, JA' },\r\n  { value: 'hi', label: 'Hindi, HI' },\r\n  { value: 'ms', label: 'Malay, MS' },\r\n  { value: 'fa', label: 'Persian, FA' },\r\n  { value: 'sw', label: 'Swahili, SW' },\r\n  { value: 'ta', label: 'Tamil, TA' },\r\n  { value: 'it', label: 'Italian, IT' },\r\n  { value: 'nl', label: 'Dutch, NL' },\r\n  { value: 'bn', label: 'Bengali, BN' },\r\n  { value: 'tr', label: 'Turkish, TR' },\r\n  { value: 'vi', label: 'Vietnamese, VI' },\r\n  { value: 'pl', label: 'Polish, PL' },\r\n  { value: 'jv', label: 'Javanese, JV' },\r\n  { value: 'pa', label: 'Punjabi, PA' },\r\n  { value: 'th', label: 'Thai, TH' },\r\n  { value: 'ko', label: 'Korean, KO' },\r\n]\r\n\r\nconst FieldSelectContacts = ({\r\n  input, meta: { touched, error }, label,\r\n}) => {\r\n  const colourStyles = {\r\n    control: styles => ({\r\n      ...styles,\r\n      width: '300px',\r\n      height: '40px',\r\n      backgroundColor: 'white',\r\n      border: touched && error ? '1px solid #EB5757' : '1px solid #C1CFE0',\r\n      borderRadius: '0px',\r\n    }),\r\n    indicatorsContainer: styles => ({\r\n      ...styles,\r\n      opacity: 0,\r\n    }),\r\n    container: styles => ({\r\n      ...styles,\r\n      color: '#657C9A',\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 400,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n    }),\r\n    menuList: styles => ({\r\n      ...styles,\r\n      height: '172px',\r\n    }),\r\n    menu: styles => ({\r\n      ...styles,\r\n      borderRadius: '0px',\r\n    }),\r\n    input: styles => ({\r\n      ...styles,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 500,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n      color: '#000000',\r\n    }),\r\n    placeholder: styles => ({\r\n      ...styles,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 400,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n      color: '#657C9A',\r\n    }),\r\n    singleValue: styles => ({\r\n      ...styles,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: 500,\r\n      fontSize: '14px',\r\n      lineHeight: 'normal',\r\n      fontStyle: 'normal',\r\n      color: '#000000',\r\n    }),\r\n  }\r\n  return (\r\n    <label className={cx('mainLanguage')}>\r\n      <span className={cx('mainLanguage__Label')}>{label}</span>\r\n      <Select\r\n        {...input}\r\n        onBlur={() => input.onBlur()}\r\n        onChange={input.onChange}\r\n        value={input.value}\r\n        options={options}\r\n        styles={colourStyles}\r\n      />\r\n      {touched && error && <p className={cx('mainLanguage__error')}>{error}</p>}\r\n    </label>\r\n  )\r\n}\r\n\r\nFieldSelectContacts.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  label: PropTypes.string,\r\n  idField: PropTypes.string,\r\n}\r\n\r\nexport default FieldSelectContacts\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldSelectContacts/FieldSelectContacts.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldSelectContacts/FieldSelectContacts.js	(date 1558904736494)
Index: src/components/fieldForm/fieldRadioProfile/FieldRadioProfile.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport styles from './FieldRadioProfile.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst FieldRadioProfile = ({\r\n  input, meta: { touched, error }, label, type, name, idField,\r\n}) => (\r\n  <Fragment>\r\n    <label className={cx('radioProfile')} htmlFor={idField}>\r\n      <input\r\n        {...input}\r\n        className={cx('radioProfile__input')}\r\n        id={idField}\r\n        type={type}\r\n        name={name}\r\n      />\r\n      <span className={cx('radioProfile__span')}>{label}</span>\r\n    </label>\r\n    {input.value === 'female' && touched && error && <p className={cx('radioProfile__pError')}>{error}</p>}\r\n  </Fragment>\r\n)\r\n\r\nFieldRadioProfile.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  idField: PropTypes.string,\r\n}\r\n\r\nexport default FieldRadioProfile\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldRadioProfile/FieldRadioProfile.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldRadioProfile/FieldRadioProfile.js	(date 1558904736494)
Index: src/components/fieldForm/fieldInputNewUser/FieldInputNewUser.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport InputMask from 'react-input-mask'\r\nimport styles from './FieldInputNewUser.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst FieldInputNewUser = ({\r\n  label, input, type, meta: { touched, error }, span, placeholder,\r\n  idField, classNameLabel, mask,\r\n}) => {\r\n  const inputRender = mask ? (\r\n    <InputMask\r\n      {...input}\r\n      type={type}\r\n      className={cx('inputNewUser__input', { inputNewUser__errorInput: touched && error })}\r\n      mask={mask}\r\n      placeholder={placeholder}\r\n      id={idField}\r\n    />\r\n  )\r\n    : (\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        className={cx('inputNewUser__input', { inputNewUser__errorInput: touched && error })}\r\n        placeholder={placeholder}\r\n        id={idField}\r\n      />\r\n    )\r\n  return (\r\n    <div className={cx(classNameLabel)}>\r\n      <div className={cx('inputNewUser__wrapperLabel')}>\r\n        <label htmlFor={idField} className={cx('inputNewUser__H4')}>{label}</label>\r\n        {span && <label htmlFor={idField} className={cx('inputNewUser__span')}>*</label>}\r\n      </div>\r\n      {inputRender}\r\n      {touched && error && <p className={cx('inputNewUser__pError')}>{error}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nFieldInputNewUser.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  classNameLabel: PropTypes.string,\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  span: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  mask: PropTypes.string,\r\n  idField: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default FieldInputNewUser\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldInputNewUser/FieldInputNewUser.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldInputNewUser/FieldInputNewUser.js	(date 1558904736494)
Index: src/components/fieldForm/fieldInputAccount/FieldInputAccount.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { ReactComponent as VisibilityIcon } from '../../../img/icon/visibility.svg'\r\nimport { ReactComponent as VisibilityOffIcon } from '../../../img/icon/visibilityOff.svg'\r\nimport styles from './FieldInputAccount.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst FieldInputAccount = ({\r\n  input, type, meta: { touched, error }, label, isVisibility, idInput, changeTypePassword,\r\n}) => {\r\n  const visibilityIcon = type === 'text'\r\n    ? <VisibilityIcon className={cx('inputAccount__visibilityIcon')} onClick={changeTypePassword} />\r\n    : <VisibilityOffIcon className={cx('inputAccount__visibilityIcon')} onClick={changeTypePassword} />\r\n  return (\r\n    <div className={cx('inputAccount')}>\r\n      <label htmlFor={idInput} className={cx('inputAccount__label')}>{label}</label>\r\n      <div className={cx('inputAccount__wrapperInput')}>\r\n        {isVisibility && visibilityIcon}\r\n        <input\r\n          {...input}\r\n          className={cx('inputAccount__input', { inputNewUser__errorInput: touched && error })}\r\n          type={type}\r\n          id={idInput}\r\n        />\r\n      </div>\r\n      {touched && error && <p className={cx('inputAccount__pError')}>{error}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nFieldInputAccount.propTypes = {\r\n  idInput: PropTypes.string,\r\n  label: PropTypes.string,\r\n  input: PropTypes.object.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  isVisibility: PropTypes.bool,\r\n  changeTypePassword: PropTypes.func,\r\n}\r\n\r\nexport default FieldInputAccount\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldInputAccount/FieldInputAccount.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldInputAccount/FieldInputAccount.js	(date 1558904736494)
Index: src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport './fonts/fonts.css'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { createBrowserHistory } from 'history'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport logger from 'redux-logger'\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport rootSaga from './saga'\r\nimport rootReducer from './reducers'\r\nimport App from './components/app/App'\r\n\r\nconst history = createBrowserHistory()\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n  rootReducer(history),\r\n  composeEnhancer(\r\n    applyMiddleware(\r\n      routerMiddleware(history),\r\n      sagaMiddleware,\r\n      logger,\r\n    ),\r\n  ),\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\nwindow.store = store\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App history={history} />\r\n  </Provider>,\r\n  document.getElementsByClassName('root')[0],\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/index.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/index.js	(date 1558904736509)
Index: src/components/fieldForm/fieldArrayPhone/FieldPhone.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport InputMask from 'react-input-mask'\r\nimport styles from './FieldArrayPhone.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst FieldPhone = ({\r\n  input, meta: { touched, error }, label, type, isVisibilityDeleteField, placeholder, idField, deleteFieldPhone,\r\n}) => (\r\n  <div className={cx('arrayPhone__fieldPhone')}>\r\n    {isVisibilityDeleteField && (\r\n    <button\r\n      type='button'\r\n      onClick={deleteFieldPhone}\r\n      className={cx('arrayPhone__buttonDeleteField')}\r\n    />\r\n    )}\r\n    <label htmlFor={idField} className={cx('arrayPhone__labelPhone')}>{label}</label>\r\n    <InputMask\r\n      {...input}\r\n      className={cx('arrayPhone__inputMask', { arrayPhone__inputMaskError: touched && error })}\r\n      type={type}\r\n      mask='+7 (999) 999-99-99'\r\n      placeholder={placeholder}\r\n      id={idField}\r\n    />\r\n    {touched && error && <p className={cx('arrayPhone__pError')}>{error}</p>}\r\n  </div>\r\n)\r\n\r\nFieldPhone.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  isVisibilityDeleteField: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  placeholder: PropTypes.string,\r\n  idField: PropTypes.string.isRequired,\r\n  deleteFieldPhone: PropTypes.func,\r\n}\r\n\r\nexport default FieldPhone\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldArrayPhone/FieldPhone.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldArrayPhone/FieldPhone.js	(date 1558904736494)
Index: src/components/fieldForm/fieldArrayPhone/FieldArrayPhone.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Fragment, Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { Field } from 'redux-form'\r\nimport styles from './FieldArrayPhone.scss'\r\nimport FieldPhone from './FieldPhone'\r\nimport { ReactComponent as AddIcon } from '../../../img/icon/add.svg'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\n\r\nclass FieldArrayPhone extends Component {\r\n  deleteFieldPhone = index => () => {\r\n    const { fields } = this.props\r\n    fields.remove(index)\r\n  }\r\n\r\n  addFieldPhone = () => {\r\n    const { fields } = this.props\r\n    fields.push({})\r\n  }\r\n\r\n  render() {\r\n    const { fields } = this.props\r\n    return (\r\n      <Fragment>\r\n        {fields.map((phone, index) => (\r\n          <Field\r\n            key={index}\r\n            name={`${phone}.phone`}\r\n            type='text'\r\n            component={FieldPhone}\r\n            deleteFieldPhone={this.deleteFieldPhone(index)}\r\n            isVisibilityDeleteField={fields.length > 1}\r\n            label={`Phone ${index + 1}`}\r\n            idField={`phone ${index + 1}`}\r\n          />\r\n\r\n        ))\r\n            }\r\n        {fields.length !== 3 && (\r\n          <button\r\n            type='button'\r\n            className={cx('arrayPhone__addPhoneField')}\r\n            onClick={this.addFieldPhone}\r\n          >\r\n            <AddIcon className={cx('arrayPhone__addIcon')} />\r\n            <span className={cx('arrayPhone__span')}>add phone number</span>\r\n          </button>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nFieldArrayPhone.propTypes = {\r\n  fields: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default FieldArrayPhone\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/fieldForm/fieldArrayPhone/FieldArrayPhone.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/fieldForm/fieldArrayPhone/FieldArrayPhone.js	(date 1558904736494)
Index: .idea/shelf/Temp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Temp\" date=\"1557232731123\" recycled=\"false\">\r\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Temp/shelved.patch\" />\r\n  <option name=\"DESCRIPTION\" value=\"Temp\" />\r\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Temp.xml	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ .idea/shelf/Temp.xml	(date 1558984621033)
Index: src/helpers/getFilterUsers.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { createSelector } from 'reselect/lib/index'\r\nimport queryString from 'query-string/index'\r\n\r\nconst users = state => state.usersReducer.users\r\nconst filter = state => state.usersReducer.filterUsers\r\nconst perPageReducer = state => state.usersReducer.per_page\r\nconst location = state => state.router.location.search\r\n\r\nexport const getFilterUsers = createSelector(\r\n  [users, filter, perPageReducer, location],\r\n  (usersRedux, searchUsers, perPage, search) => {\r\n    const valueQuery = queryString.parse(search)\r\n    const currentPage = Number(valueQuery.page) || 1\r\n    const per_page = Number(valueQuery.per_page) || perPage\r\n    const start = (currentPage - 1) * per_page\r\n    if (searchUsers === '') {\r\n      const users = usersRedux.slice(start, start + per_page)\r\n      const pagesCount = Math.ceil(usersRedux.length / per_page)\r\n      return {\r\n        users, total: usersRedux.length, currentPage, pagesCount, per_page,\r\n      }\r\n    }\r\n    const filterUsers = usersRedux.filter(user => `${user.firstName} ${user.lastName}`.includes(searchUsers))\r\n    const users = filterUsers.slice(start, start + per_page)\r\n    const pagesCount = Math.ceil(filterUsers.length / per_page)\r\n    return {\r\n      users, total: filterUsers.length, currentPage, pagesCount, per_page,\r\n    }\r\n  },\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/helpers/getFilterUsers.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/helpers/getFilterUsers.js	(date 1558904736494)
Index: src/components/header/Header.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './Header.scss'\r\nimport { ReactComponent as LogoIcon } from '../../img/icon/logo.svg'\r\nimport { ReactComponent as AddUserIcon } from '../../img/icon/addUser.svg'\r\nimport { ReactComponent as LoginIcon } from '../../img/icon/login.svg'\r\nimport { createUser } from '../../actions/actionNewUser'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Header = ({ createUser, pathname, newUser }) => (\r\n  <header className={cx('header')}>\r\n    <div className={cx('container')}>\r\n      <div className={cx('logoA')}>\r\n        <LogoIcon className={cx('logoIcon')} alt='logoIcon' />\r\n      </div>\r\n      <Link\r\n        to='/'\r\n        className={cx('addUserA', {\r\n          activeIcon: pathname.indexOf('/users') !== 0 && pathname.indexOf('/user') !== 0\r\n            && pathname.indexOf('/edit-user') !== 0 && !newUser.id,\r\n        })}\r\n        onClick={createUser}\r\n      >\r\n        <AddUserIcon className={cx('addUserIcon')} alt='addUserIcon' />\r\n        <span className={cx('addUserSpan ')} >Add new user</span>\r\n      </Link>\r\n      <Link\r\n        to='/users'\r\n        className={cx('loginA', {\r\n          activeIcon: pathname.indexOf('/users') === 0 || pathname.indexOf('/user') === 0\r\n            || pathname.indexOf('/edit-user') === 0 || newUser.id,\r\n        })}\r\n      >\r\n        <LoginIcon className={cx('loginIcon')} alt='loginIon' />\r\n        <span className={cx('loginSpan ')}>List of users</span>\r\n      </Link>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  pathname: PropTypes.string.isRequired,\r\n  createUser: PropTypes.func.isRequired,\r\n  newUser: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { pathname } = state.router.location\r\n  return {\r\n    pathname,\r\n    newUser: state.newUser,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createUser },\r\n)(Header)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/header/Header.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/header/Header.js	(date 1558904736494)
Index: src/components/app/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Switch, Redirect } from 'react-router'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport classNames from 'classnames'\r\nimport _ from 'lodash/core'\r\nimport './reset.css'\r\nimport styles from './App.scss'\r\nimport AddingNewUserPage from '../../pages/addingNewUserPage/AddingNewUserPage'\r\nimport EditUserPage from '../../pages/editUserPage/EditUserPage'\r\nimport UsersPage from '../../pages/usersPage/UsersPage'\r\nimport EditingPage from '../../pages/editingPage/EditingPage'\r\nimport Header from '../header/Header'\r\nimport { NotFound } from '../../pages/notFound/NotFound'\r\nimport db from '../../db'\r\nimport { changeQuestionState } from '../../actions/actionNewUser'\r\nimport { initialNewUserState } from '../../stubs/initialNewUserState'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const { changeQuestionState } = this.props\r\n    db.newUserDB.get(0, newUserDB => {\r\n      if (newUserDB) {\r\n        changeQuestionState(_.isEqual(newUserDB, initialNewUserState))\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props\r\n    return (\r\n      <ConnectedRouter history={history}>\r\n        <div className={cx('app')}>\r\n          <Header />\r\n          <Switch>\r\n            <Route path='/not-found' component={NotFound} />\r\n            <Route exact path='/users' component={UsersPage} />\r\n            <Route exact path='/user/:id' component={EditUserPage} />\r\n            <Route path='/edit-user/:id' component={EditingPage} />\r\n            <Route path='/' component={AddingNewUserPage} />\r\n            <Redirect to='/not-found' />\r\n          </Switch>\r\n        </div>\r\n      </ConnectedRouter>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  changeQuestionState: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { changeQuestionState },\r\n)(App)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/app/App.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/app/App.js	(date 1558904736494)
Index: src/reducers/editUserReducer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n\r\n  FETCH_EDIT_USER__SUCCESS,\r\n  FETCH_EDIT_USER__FAILURE,\r\n\r\n  CHANGE_AVATAR_ACCOUNT_EDITING__SUCCESS,\r\n  CHANGE_AVATAR_ACCOUNT_EDITING__FAILURE,\r\n\r\n  SAVE_CHANGES_ACCOUNT_EDITING__FAILURE,\r\n  SAVE_CHANGES_PROFILE_EDITING__FAILURE,\r\n  SAVE_CHANGES_CONTACTS_EDITING__FAILURE,\r\n  SAVE_CHANGES_CAPABILITIES_EDITING__FAILURE,\r\n} from '../actions/actionEditUser'\r\n\r\nexport default function editUserReducer(state = { editUser: {} }, action) {\r\n  switch (action.type) {\r\n    case FETCH_EDIT_USER__SUCCESS: {\r\n      return {\r\n        ...state,\r\n        editUser: action.payload.editUser,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case FETCH_EDIT_USER__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case CHANGE_AVATAR_ACCOUNT_EDITING__SUCCESS: {\r\n      return {\r\n        ...state,\r\n        editUser: {\r\n          ...state.editUser,\r\n          userSRCAvatarIMG: action.payload.userSRCAvatarIMG,\r\n        },\r\n        error: undefined,\r\n      }\r\n    }\r\n    case CHANGE_AVATAR_ACCOUNT_EDITING__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case SAVE_CHANGES_ACCOUNT_EDITING__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n    case SAVE_CHANGES_PROFILE_EDITING__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n    case SAVE_CHANGES_CONTACTS_EDITING__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n    case SAVE_CHANGES_CAPABILITIES_EDITING__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/reducers/editUserReducer.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/reducers/editUserReducer.js	(date 1558904736509)
Index: src/reducers/usersReducer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n  FETCH_USERS__SUCCESS,\r\n  FETCH_USERS__FAILURE,\r\n\r\n  DELETE_USER__SUCCESS,\r\n  DELETE_USER__FAILURE,\r\n\r\n  SEARCHING_USERS__SUCCESS,\r\n  SEARCHING_USERS__FAILURE,\r\n} from '../actions/actionUsers'\r\nimport { initialUsersState } from '../stubs/initialUsersState'\r\n\r\nexport default function usersReducer(state = initialUsersState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USERS__SUCCESS: {\r\n      return {\r\n        ...state,\r\n        users: [...action.payload.users],\r\n        error: undefined,\r\n      }\r\n    }\r\n    case FETCH_USERS__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case DELETE_USER__SUCCESS: {\r\n      return {\r\n        ...state,\r\n        users: [...action.payload.users],\r\n        error: undefined,\r\n      }\r\n    }\r\n    case DELETE_USER__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case SEARCHING_USERS__SUCCESS: {\r\n      return {\r\n        ...state,\r\n        filterUsers: action.payload.filterUsers,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case SEARCHING_USERS__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/reducers/usersReducer.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/reducers/usersReducer.js	(date 1558904736509)
Index: src/reducers/newUserReducer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { initialNewUserState } from '../stubs/initialNewUserState'\r\nimport {\r\n  SAVE_NEW_USER_DATA__SUCCESS,\r\n  SAVE_NEW_USER_DATA__FAILURE,\r\n\r\n  CHANGE_QUESTION_STATE__OPEN,\r\n  CHANGE_QUESTION_STATE__CLOSE,\r\n  CHANGE_QUESTION_STATE__FAILURE,\r\n\r\n  CONTINUE_USER__CONTINUE,\r\n  CONTINUE_USER__CLOSE,\r\n  CONTINUE_USER__FAILURE,\r\n\r\n  CHANGE_AVATAR_ACCOUNT__SUCCESS,\r\n  CHANGE_AVATAR_ACCOUNT__FAILURE,\r\n\r\n  FORWARD_CAPABILITIES__ADD_NEW_USER,\r\n  FORWARD_CAPABILITIES__FAILURE,\r\n\r\n  CREATE_USER__SUCCESS,\r\n  CREATE_USER__FAILURE,\r\n} from '../actions/actionNewUser'\r\n\r\nexport default function newUserReducer(state = initialNewUserState, action) {\r\n  switch (action.type) {\r\n    case SAVE_NEW_USER_DATA__SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case SAVE_NEW_USER_DATA__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case CHANGE_QUESTION_STATE__CLOSE: {\r\n      return {\r\n        ...state,\r\n        isQuestion: false,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case CHANGE_QUESTION_STATE__OPEN: {\r\n      return {\r\n        ...state,\r\n        isQuestion: action.payload.isQuestion,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case CHANGE_QUESTION_STATE__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case CONTINUE_USER__CONTINUE: {\r\n      return {\r\n        ...action.payload,\r\n        isQuestion: false,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case CONTINUE_USER__CLOSE: {\r\n      return {\r\n        ...state,\r\n        isQuestion: action.payload.isQuestion,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case CONTINUE_USER__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case CHANGE_AVATAR_ACCOUNT__SUCCESS: {\r\n      return {\r\n        ...state,\r\n        userSRCAvatarIMG: action.payload.userSRCAvatarIMG,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case CHANGE_AVATAR_ACCOUNT__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case FORWARD_CAPABILITIES__ADD_NEW_USER: {\r\n      return {\r\n        ...action.payload,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case FORWARD_CAPABILITIES__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    case CREATE_USER__SUCCESS: {\r\n      return {\r\n        ...action.payload,\r\n        error: undefined,\r\n      }\r\n    }\r\n    case CREATE_USER__FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/reducers/newUserReducer.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/reducers/newUserReducer.js	(date 1558904736509)
Index: src/reducers/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { reducer as reduxFormReducer } from 'redux-form'\r\nimport newUser from './newUserReducer'\r\nimport usersReducer from './usersReducer'\r\nimport editUserReducer from './editUserReducer'\r\n\r\nexport default history => combineReducers({\r\n  router: connectRouter(history),\r\n  newUser,\r\n  usersReducer,\r\n  editUserReducer,\r\n  form: reduxFormReducer,\r\n})\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/reducers/index.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/reducers/index.js	(date 1558904736509)
Index: src/stubs/users.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import AvatarIMG1 from '../img/Ellipse(1).png'\r\nimport AvatarIMG2 from '../img/Ellipse(2).png'\r\nimport AvatarIMG3 from '../img/Ellipse(3).png'\r\nimport AvatarIMG4 from '../img/Ellipse(4).png'\r\nimport AvatarIMG5 from '../img/Ellipse(5).png'\r\nimport AvatarIMG6 from '../img/Ellipse(6).png'\r\nimport AvatarIMG7 from '../img/Ellipse(7).png'\r\n\r\nexport const users = [\r\n  {\r\n    id: 1,\r\n    userName: 'Maxim 1',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG1],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 1',\r\n    fullName: 'Maxim Morozov 1',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email1@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+7 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: 'Sport,fitness, aerobica and staff like that',\r\n    checkboxJustWant: 'just want to play games, I’m not living in this life',\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxWtf: 'WTF is “hobbies”???',\r\n    lastUpdate: new Date(),\r\n  },\r\n  {\r\n    id: 2,\r\n    userName: 'Maxim 2',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG2],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 2',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email2@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 16, 1),\r\n  },\r\n  {\r\n    id: 3,\r\n    userName: 'Maxim 3',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG3],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 3',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email3@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 15, 1),\r\n  },\r\n  {\r\n    id: 4,\r\n    userName: 'Maxim 4',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG4],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 4',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email4@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 14, 1),\r\n  },\r\n  {\r\n    id: 5,\r\n    userName: 'Maxim 5',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG5],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 5',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email5@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 13, 1),\r\n  },\r\n  {\r\n    id: 6,\r\n    userName: 'Maxim 6',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG6],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 6',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email6@gmail.com',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 10, 1),\r\n  },\r\n  {\r\n    id: 7,\r\n    userName: 'Maxim 7',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 7',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email7@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 2, 1),\r\n  },\r\n  {\r\n    id: 8,\r\n    userName: 'Maxim 8',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 8',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email8@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 1, 1),\r\n  },\r\n  {\r\n    id: 9,\r\n    userName: 'Maxim 9',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG1],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 9',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email9@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: 'Sport,fitness, aerobica and staff like that',\r\n    checkboxJustWant: 'just want to play games, I’m not living in this life',\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxWtf: 'WTF is “hobbies”???',\r\n    lastUpdate: new Date(2019, 4, 2, 1),\r\n  },\r\n  {\r\n    id: 10,\r\n    userName: 'Maxim 10',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG2],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 10',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email10@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 22, 1),\r\n  },\r\n  {\r\n    id: 11,\r\n    userName: 'Maxim 11',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG3],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 11',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email11@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 5, 10, 1),\r\n  },\r\n  {\r\n    id: 12,\r\n    userName: 'Maxim 12',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG4],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 12',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email12@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 3, 10, 1),\r\n  },\r\n  {\r\n    id: 13,\r\n    userName: 'Maxim 13',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG5],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 13',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email13@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2010, 3, 10, 1),\r\n  },\r\n  {\r\n    id: 14,\r\n    userName: 'Maxim 14',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG6],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 14',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email14@gmail.com',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2000, 3, 10, 1),\r\n  },\r\n  {\r\n    id: 15,\r\n    userName: 'Maxim 15',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 15',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email15@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2000, 2, 10, 1),\r\n  },\r\n  {\r\n    id: 16,\r\n    userName: 'Maxim 16',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 16',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email16@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2018, 2, 10, 1),\r\n  },\r\n  {\r\n    id: 17,\r\n    userName: 'Maxim 17',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG1],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 17',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email17@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: 'Sport,fitness, aerobica and staff like that',\r\n    checkboxJustWant: 'just want to play games, I’m not living in this life',\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxWtf: 'WTF is “hobbies”???',\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 18,\r\n    userName: 'Maxim 18',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG2],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 18',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email18@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 19,\r\n    userName: 'Maxim 19',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG3],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 19',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email19@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 20,\r\n    userName: 'Maxim 20',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG4],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 20',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email20@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 21,\r\n    userName: 'Maxim 21',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG5],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 21',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email21@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 22,\r\n    userName: 'Maxim 22',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG6],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 22',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email22@gmail.com',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 23,\r\n    userName: 'Maxim 23',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 23',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email23@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 24,\r\n    userName: 'Maxim 24',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 24',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email24@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 25,\r\n    userName: 'Maxim 25',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG1],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 25',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email25@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: 'Sport,fitness, aerobica and staff like that',\r\n    checkboxJustWant: 'just want to play games, I’m not living in this life',\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxWtf: 'WTF is “hobbies”???',\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 26,\r\n    userName: 'Maxim 26',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG2],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 26',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email26@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 27,\r\n    userName: 'Maxim 27',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG3],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 27',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email27@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 28,\r\n    userName: 'Maxim 28',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG4],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 28',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email28@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 29,\r\n    userName: 'Maxim 29',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG5],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 29',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email29@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 30,\r\n    userName: 'Maxim 30',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG6],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 30',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email30@gmail.com',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 31,\r\n    userName: 'Maxim 31',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 31',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email31@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 32,\r\n    userName: 'Maxim 32',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 32',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email32@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 33,\r\n    userName: 'Maxim 33',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG1],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 33',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email33@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: 'Sport,fitness, aerobica and staff like that',\r\n    checkboxJustWant: 'just want to play games, I’m not living in this life',\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxWtf: 'WTF is “hobbies”???',\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 34,\r\n    userName: 'Maxim 34',\r\n    password: '2222',\r\n    repeatPassword: '2222',\r\n    userSRCAvatarIMG: [AvatarIMG2],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 34',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email34@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 35,\r\n    userName: 'Maxim 35',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG3],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 35',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email35@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 36,\r\n    userName: 'Maxim 36',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG4],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 36',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email36@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 37,\r\n    userName: 'Maxim 37',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG5],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 37',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email37@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 38,\r\n    userName: 'Maxim 38',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG6],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 38',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email38@gmail.com',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 39,\r\n    userName: 'Maxim 39',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 39',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email39@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n  {\r\n    id: 40,\r\n    userName: 'Maxim 40',\r\n    password: '111',\r\n    repeatPassword: '111',\r\n    userSRCAvatarIMG: [AvatarIMG7],\r\n    firstName: 'Maxim',\r\n    lastName: 'Morozov 40',\r\n    birthDate: new Date(2000, 2, 1),\r\n    email: 'my_email40@gmail.com',\r\n    address: 'Street TRUE, 130',\r\n    gender: '',\r\n\r\n    company: 'Company name',\r\n    githubLink: '',\r\n    facebookLink: 'facebook.com/',\r\n    selectLanguage: null,\r\n    fax: '+38 (066) 123 123 11',\r\n    phoneArray: [{ phone: '+7 (066) 123 12 31' }, { phone: '+7 (066) 123 12 32' }, { phone: '+7 (066) 123 12 33' }],\r\n\r\n    selectSkills: [{ value: 'CSS', label: 'CSS' },\r\n      { value: 'Javascript', label: 'Javascript' },\r\n      { value: 'jQuery', label: 'jQuery' },\r\n      { value: 'React', label: 'React' }],\r\n    textareaField: 'Guitar, guitar and guitar again. I’m fall in love with it.',\r\n    checkboxArt: 'Art',\r\n    checkboxSport: false,\r\n    checkboxJustWant: false,\r\n    checkboxFemale: 'I’m a female... I’m doing nothing. Every day.',\r\n    checkboxGuitar: false,\r\n    checkboxWtf: false,\r\n    lastUpdate: new Date(2019, 4, 5, 1),\r\n  },\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/stubs/users.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/stubs/users.js	(date 1558904736509)
Index: src/stubs/initialNewUserState.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const initialNewUserState = {\r\n  isQuestion: false,\r\n  id: 0,\r\n  accountFilled: false,\r\n  userName: '',\r\n  password: '',\r\n  repeatPassword: '',\r\n  userSRCAvatarIMG: '',\r\n\r\n  profileFilled: false,\r\n  firstName: '',\r\n  lastName: '',\r\n  birthDate: '',\r\n  email: '',\r\n  address: '',\r\n  gender: '',\r\n\r\n  contactsFilled: false,\r\n  company: '',\r\n  githubLink: '',\r\n  facebookLink: '',\r\n  selectLanguage: '',\r\n  fax: '',\r\n  phoneArray: [{}],\r\n\r\n  selectSkills: '',\r\n  textareaField: '',\r\n  checkboxArt: '',\r\n  checkboxSport: '',\r\n  checkboxJustWant: '',\r\n  checkboxFemale: '',\r\n  checkboxGuitar: '',\r\n  checkboxWtf: '',\r\n\r\n  error: undefined,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/stubs/initialNewUserState.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/stubs/initialNewUserState.js	(date 1558904736509)
Index: src/pages/addingNewUserPage/capabilities/Capabilities.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Field, formValueSelector, reduxForm } from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport { push } from 'connected-react-router'\r\nimport {\r\n  saveNewUserData,\r\n  forwardCapabilities,\r\n} from '../../../actions/actionNewUser'\r\nimport styles from '../../../components/userFormBox/UserFormBox.scss'\r\nimport FieldSelectCapabilities\r\n  from '../../../components/fieldForm/fieldSelectCapabilities/FieldSelectCapabilities'\r\nimport FieldTextareaCapabilities\r\n  from '../../../components/fieldForm/fieldTextareaCapabilities/FieldTextareaCapabilities'\r\nimport UserFormBox from '../../../components/userFormBox/UserFormBox'\r\nimport FieldCheckboxCapabilities\r\n  from '../../../components/fieldForm/fieldCheckboxCapabilities/FieldCheckboxCapabilities'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass Capabilities extends Component {\r\n  onSubmit = values => {\r\n    const { forwardCapabilities } = this.props\r\n    forwardCapabilities(values.selectSkills, values.textareaField, values.checkboxArt, values.checkboxSport,\r\n      values.checkboxJustWant, values.checkboxFemale, values.checkboxGuitar, values.checkboxWtf)\r\n  }\r\n\r\n  backCapabilities = () => {\r\n    const {\r\n      saveNewUserData, selectSkillsForm, textareaFieldForm, checkboxArtForm, checkboxSportForm,\r\n      checkboxJustWantForm, checkboxFemaleForm, checkboxGuitarForm, checkboxWtfForm, push,\r\n    } = this.props\r\n    push('/contacts')\r\n    saveNewUserData({\r\n      selectSkills: selectSkillsForm,\r\n      textareaField: textareaFieldForm,\r\n      checkboxArt: checkboxArtForm,\r\n      checkboxSport: checkboxSportForm,\r\n      checkboxJustWant: checkboxJustWantForm,\r\n      checkboxFemale: checkboxFemaleForm,\r\n      checkboxGuitar: checkboxGuitarForm,\r\n      checkboxWtf: checkboxWtfForm,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props\r\n    return (\r\n      <UserFormBox handleSubmit={handleSubmit(this.onSubmit)}>\r\n        <div className={cx('userFormBox__sideLeft')}>\r\n          <Field\r\n            component={FieldSelectCapabilities}\r\n            name='selectSkills'\r\n            label='Skills'\r\n          />\r\n          <Field\r\n            component={FieldTextareaCapabilities}\r\n            name='textareaField'\r\n            label='Additional information'\r\n            idTextarea='idFieldTextarea'\r\n          />\r\n        </div>\r\n        <div className={cx('userFormBox__sideRight')}>\r\n          <h3 className={cx('userFormBox__hobbies')}>My hobbies</h3>\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxArt'\r\n            span='Art'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxSport'\r\n            span='Sport,fitness, aerobica and staff like that'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxJustWant'\r\n            span='just want to play games, I’m not living in this life'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxFemale'\r\n            span='I’m a female... I’m doing nothing. Every day.'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxGuitar'\r\n            span='Guitar, guitar and guitar again. I’m fall in love with it.'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxWtf'\r\n            span='WTF is “hobbies”???'\r\n          />\r\n          <div className={cx('userFormBox__wrapperButton')}>\r\n            <button\r\n              type='button'\r\n              className={cx('userFormBox__back')}\r\n              onClick={this.backCapabilities}\r\n            >\r\n              Back\r\n            </button>\r\n            <button type='submit' className={cx('userFormBox__finish')}>\r\n              Finish\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </UserFormBox>\r\n    )\r\n  }\r\n}\r\n\r\nCapabilities.propTypes = {\r\n  selectSkillsForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.array,\r\n  ]),\r\n  textareaFieldForm: PropTypes.string,\r\n  checkboxArtForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  checkboxSportForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  checkboxJustWantForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  checkboxFemaleForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  checkboxGuitarForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  checkboxWtfForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  saveNewUserData: PropTypes.func.isRequired,\r\n  forwardCapabilities: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  push: PropTypes.func.isRequired,\r\n}\r\n\r\nconst CapabilitiesForm = reduxForm({\r\n  validate: values => {\r\n    const errors = {}\r\n\r\n    if (!values.selectSkills) {\r\n      errors.selectSkills = 'Missing Skills'\r\n    } else if (values.selectSkills.length <= 2) {\r\n      errors.selectSkills = 'select at least 3 option'\r\n    }\r\n    if (!values.textareaField) {\r\n      errors.textareaField = 'Missing Additional Information'\r\n    } else if (values.textareaField.length <= 10) {\r\n      errors.textareaField = 'Must be 11 characters or more'\r\n    }\r\n    if (!values.checkboxArt && !values.checkboxSport && !values.checkboxJustWant && !values.checkboxFemale\r\n      && !values.checkboxGuitar && !values.checkboxWtf) {\r\n      errors.checkboxWtf = 'Missing My Hobbies'\r\n    }\r\n\r\n    return errors\r\n  },\r\n  form: 'Capabilities',\r\n  enableReinitialize: true,\r\n})(Capabilities)\r\n\r\nconst mapStateToProps = state => {\r\n  const selector = formValueSelector('Capabilities')\r\n  const selectSkillsForm = selector(state, 'selectSkills')\r\n  const textareaFieldForm = selector(state, 'textareaField')\r\n  const checkboxArtForm = selector(state, 'checkboxArt')\r\n  const checkboxSportForm = selector(state, 'checkboxSport')\r\n  const checkboxJustWantForm = selector(state, 'checkboxJustWant')\r\n  const checkboxFemaleForm = selector(state, 'checkboxFemale')\r\n  const checkboxGuitarForm = selector(state, 'checkboxGuitar')\r\n  const checkboxWtfForm = selector(state, 'checkboxWtf')\r\n  const {\r\n    selectSkills, textareaField, checkboxArt, checkboxSport, checkboxJustWant, checkboxFemale,\r\n    checkboxGuitar, checkboxWtf,\r\n  } = state.newUser\r\n  return {\r\n    initialValues: {\r\n      selectSkills,\r\n      textareaField,\r\n      checkboxArt,\r\n      checkboxSport,\r\n      checkboxJustWant,\r\n      checkboxFemale,\r\n      checkboxGuitar,\r\n      checkboxWtf,\r\n    },\r\n    selectSkillsForm,\r\n    textareaFieldForm,\r\n    checkboxArtForm,\r\n    checkboxSportForm,\r\n    checkboxJustWantForm,\r\n    checkboxFemaleForm,\r\n    checkboxGuitarForm,\r\n    checkboxWtfForm,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { saveNewUserData, forwardCapabilities, push },\r\n)(CapabilitiesForm)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/addingNewUserPage/capabilities/Capabilities.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/addingNewUserPage/capabilities/Capabilities.js	(date 1558904736509)
Index: src/pages/addingNewUserPage/profile/Profile.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { push } from 'connected-react-router'\r\nimport { reduxForm, Field, formValueSelector } from 'redux-form'\r\nimport styles from '../../../components/userFormBox/UserFormBox.scss'\r\nimport {\r\n  saveNewUserData,\r\n} from '../../../actions/actionNewUser'\r\nimport FieldRadioProfile from '../../../components/fieldForm/fieldRadioProfile/FieldRadioProfile'\r\nimport DateTimePickerProfile\r\n  from '../../../components/fieldForm/dateTimePickerProfile/DateTimePickerProfile'\r\nimport FieldInputNewUser from '../../../components/fieldForm/fieldInputNewUser/FieldInputNewUser'\r\nimport UserFormBox from '../../../components/userFormBox/UserFormBox'\r\nimport db from '../../../db'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass Profile extends Component {\r\n    onSubmit = values => {\r\n      const { saveNewUserData, push } = this.props\r\n      push('/contacts')\r\n      saveNewUserData({\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        birthDate: values.birthDate,\r\n        email: values.email,\r\n        address: values.address,\r\n        gender: values.gender,\r\n        profileFilled: true,\r\n      })\r\n    }\r\n\r\n    backProfile = () => {\r\n      const {\r\n        saveNewUserData, firstNameForm, lastNameForm, birthDateForm, emailForm, addressForm, genderForm, push,\r\n      } = this.props\r\n      push('/')\r\n      saveNewUserData({\r\n        firstName: firstNameForm,\r\n        lastName: lastNameForm,\r\n        birthDate: birthDateForm,\r\n        email: emailForm,\r\n        address: addressForm,\r\n        gender: genderForm,\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const { handleSubmit } = this.props\r\n      return (\r\n        <UserFormBox handleSubmit={handleSubmit(this.onSubmit)}>\r\n          <div className={cx('userFormBox__sideLeft')}>\r\n            <Field\r\n              component={FieldInputNewUser}\r\n              type='text'\r\n              span\r\n              label='First name'\r\n              name='firstName'\r\n              idField='fieldFirstName'\r\n              classNameLabel='inputNewUser'\r\n            />\r\n            <Field\r\n              component={FieldInputNewUser}\r\n              type='text'\r\n              span\r\n              label='Last name'\r\n              name='lastName'\r\n              idField='fieldLastName'\r\n              classNameLabel='inputNewUser'\r\n            />\r\n            <Field name='birthDate' component={DateTimePickerProfile} />\r\n          </div>\r\n          <div className={cx('userFormBox__sideRight')}>\r\n            <Field\r\n              component={FieldInputNewUser}\r\n              type='text'\r\n              span\r\n              label='Email'\r\n              name='email'\r\n              idField='fieldEmail'\r\n              classNameLabel='inputNewUser'\r\n            />\r\n            <Field\r\n              component={FieldInputNewUser}\r\n              type='text'\r\n              span\r\n              label='Address'\r\n              name='address'\r\n              idField='fieldAddress'\r\n              classNameLabel='inputNewUser'\r\n            />\r\n            <h5>Gender</h5>\r\n            <div className={cx('userFormBox__wrapperGender')}>\r\n              <Field\r\n                component={FieldRadioProfile}\r\n                type='radio'\r\n                label='Male'\r\n                name='gender'\r\n                value='male'\r\n                idField='fieldMale'\r\n              />\r\n              <Field\r\n                component={FieldRadioProfile}\r\n                type='radio'\r\n                label='Female'\r\n                name='gender'\r\n                value='female'\r\n                idField='fieldFemale'\r\n              />\r\n            </div>\r\n            <div className={cx('userFormBox__wrapperButton')}>\r\n              <button type='button' onClick={this.backProfile} className={cx('userFormBox__back')}>\r\n                Back\r\n              </button>\r\n              <button type='submit' className={cx('userFormBox__forward')}>Forward</button>\r\n            </div>\r\n          </div>\r\n        </UserFormBox>\r\n      )\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n  firstNameForm: PropTypes.string,\r\n  lastNameForm: PropTypes.string,\r\n  birthDateForm: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n  ]),\r\n  emailForm: PropTypes.string,\r\n  addressForm: PropTypes.string,\r\n  genderForm: PropTypes.string,\r\n  saveNewUserData: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  push: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nconst ProfileForm = reduxForm({\r\n  asyncValidate: values => db.usersDB.toArray(usersDB => {\r\n    const userEmailList = usersDB.map(user => user.email)\r\n    let errorEmail\r\n    userEmailList.find(userEmail => (\r\n      errorEmail = values.email === userEmail ? 'already have this email in the database' : null))\r\n    if (errorEmail) {\r\n      return Promise.reject({\r\n        email: errorEmail,\r\n      })\r\n    }\r\n  }),\r\n  validate: values => {\r\n    const errors = {}\r\n    if (!values.birthDate) {\r\n      errors.birthDate = 'Missing Birth Date'\r\n    } else if ((new Date().getFullYear() - values.birthDate.getFullYear()) < 18) {\r\n      errors.birthDate = 'Sorry, you must be at least 18 years old'\r\n    }\r\n\r\n    if (!values.gender) {\r\n      errors.gender = 'Missing Gender'\r\n    }\r\n\r\n    if (!values.firstName) {\r\n      errors.firstName = 'Missing First name'\r\n    } else if (values.firstName.length <= 2) {\r\n      errors.firstName = 'Must be 3 characters or more'\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = 'Missing Last name'\r\n    } else if (values.lastName.length <= 2) {\r\n      errors.lastName = 'Must be 3 characters or more'\r\n    }\r\n\r\n    if (!values.address) {\r\n      errors.address = 'Missing Address'\r\n    }\r\n    if (!values.email) {\r\n      errors.email = 'Missing Email'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n  },\r\n  form: 'Profile',\r\n  enableReinitialize: true,\r\n})(Profile)\r\n\r\nconst mapStateToProps = state => {\r\n  const selector = formValueSelector('Profile')\r\n  const firstNameForm = selector(state, 'firstName')\r\n  const lastNameForm = selector(state, 'lastName')\r\n  const emailForm = selector(state, 'email')\r\n  const addressForm = selector(state, 'address')\r\n  const genderForm = selector(state, 'gender')\r\n  const birthDateForm = selector(state, 'birthDate')\r\n  const {\r\n    firstName, lastName, email, address, gender, birthDate,\r\n  } = state.newUser\r\n  return {\r\n    initialValues: {\r\n      firstName, lastName, birthDate, email, address, gender,\r\n    },\r\n    firstNameForm,\r\n    lastNameForm,\r\n    birthDateForm,\r\n    emailForm,\r\n    addressForm,\r\n    genderForm,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { saveNewUserData, push },\r\n)(ProfileForm)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/addingNewUserPage/profile/Profile.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/addingNewUserPage/profile/Profile.js	(date 1558904736509)
Index: src/pages/addingNewUserPage/account/questionAccount/QuestionAccount.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { ReactComponent as CloseIcon } from '../../../../img/icon/close.svg'\r\nimport styles from './QuestionAccount.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst QuestionAccount = ({ continueUser }) => (\r\n  <div className={cx('accountComponentQuestion')}>\r\n    <span className={cx('accountComponentQuestion__span')}>\r\n            You have an unsaved user data. Do you want to complete it?\r\n    </span>\r\n    <button\r\n      type='button'\r\n      className={cx('accountComponentQuestion__continue')}\r\n      onClick={continueUser(true)}\r\n    >\r\n      Continue\r\n    </button>\r\n    <button\r\n      type='button'\r\n      className={cx('accountComponentQuestion__close')}\r\n      onClick={continueUser(false)}\r\n    >\r\n      <CloseIcon className={cx('accountComponentQuestion__closeIcon')} alt='closeIcon' />\r\n    </button>\r\n  </div>\r\n)\r\n\r\nQuestionAccount.propTypes = {\r\n  continueUser: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default QuestionAccount\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/addingNewUserPage/account/questionAccount/QuestionAccount.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/addingNewUserPage/account/questionAccount/QuestionAccount.js	(date 1558904736509)
Index: src/pages/addingNewUserPage/account/Account.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { push } from 'connected-react-router'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport styles from '../../../components/userFormBox/UserFormBox.scss'\r\nimport { ReactComponent as UserAvatarIcon } from '../../../img/icon/UserAvatar.svg'\r\nimport { ReactComponent as AddIcon } from '../../../img/icon/add.svg'\r\nimport {\r\n  saveNewUserData,\r\n  continueUser,\r\n  changeQuestionState,\r\n  changeAvatarAccount,\r\n} from '../../../actions/actionNewUser'\r\nimport FieldInputAccount from '../../../components/fieldForm/fieldInputAccount/FieldInputAccount'\r\nimport UserFormBox from '../../../components/userFormBox/UserFormBox'\r\nimport QuestionAccount from './questionAccount/QuestionAccount'\r\nimport CropperModal from '../../../components/cropperModalWindow/CropperModal'\r\nimport db from '../../../db'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass Account extends Component {\r\n  state = {\r\n    avatarIMGError: null,\r\n    typePasswordFirstInput: 'text',\r\n    typePasswordSecondInput: 'text',\r\n    cropperSrc: null,\r\n  }\r\n\r\n  continueUser = isContinue => () => {\r\n    const { continueUser } = this.props\r\n    continueUser(isContinue)\r\n  }\r\n\r\n  addImageUserAvatar = event => {\r\n    event.preventDefault()\r\n    const reader = new FileReader()\r\n    const fileIMG = event.target.files[0]\r\n    const fileSize = fileIMG.size / 1024 / 1024\r\n    if (fileSize < 1) {\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          avatarIMGError: false,\r\n          cropperSrc: reader.result,\r\n        })\r\n      }\r\n      reader.readAsDataURL(fileIMG)\r\n    } else {\r\n      this.setState({\r\n        avatarIMGError: 'File should not exceed 1 mb',\r\n      })\r\n    }\r\n  }\r\n\r\n  onSubmit = values => {\r\n    const { saveNewUserData, userSRCAvatarIMG, push } = this.props\r\n    if (!userSRCAvatarIMG) {\r\n      this.setState({\r\n        avatarIMGError: 'Upload a picture',\r\n      })\r\n    } else {\r\n      push('/profile')\r\n      saveNewUserData({\r\n        userName: values.userName,\r\n        password: values.password,\r\n        repeatPassword: values.password,\r\n        userSRCAvatarIMG,\r\n        accountFilled: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  changeTypePassword = nameTypePassword => () => {\r\n    const { [nameTypePassword]: typePassword } = this.state\r\n    if (typePassword === 'text') {\r\n      this.setState({\r\n        [nameTypePassword]: 'password',\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [nameTypePassword]: 'text',\r\n      })\r\n    }\r\n  }\r\n\r\n  setCropperSrc = () => {\r\n    this.setState({\r\n      cropperSrc: null,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      handleSubmit, isQuestion, userSRCAvatarIMG, changeAvatarAccount,\r\n    } = this.props\r\n    const {\r\n      avatarIMGError, typePasswordFirstInput, typePasswordSecondInput, cropperSrc,\r\n    } = this.state\r\n    const userAvatarIMG = userSRCAvatarIMG\r\n      ? <img className={cx('userAvatarWrapper__userAvatarIMG')} src={userSRCAvatarIMG} alt='userAvatar' />\r\n      : <UserAvatarIcon className={cx('userAvatarWrapper__userAvatarSVG')} alt='userAvatar' />\r\n    const UserAvatar = avatarIMGError\r\n      ? <p className={cx('userAvatarWrapper__avatarError')}>{avatarIMGError}</p> : null\r\n    return (\r\n      <Fragment>\r\n        {isQuestion && <QuestionAccount continueUser={this.continueUser} />}\r\n        <UserFormBox handleSubmit={handleSubmit(this.onSubmit)} classForm='userFormBoxAccount'>\r\n          <div className={cx('userAvatarWrapper')}>\r\n            <label htmlFor='userAvatar'>\r\n              {userAvatarIMG}\r\n              <input\r\n                id='userAvatar'\r\n                type='file'\r\n                className={cx('userAvatarWrapper__inputFile')}\r\n                accept='image/*,image/jpeg'\r\n                onChange={this.addImageUserAvatar}\r\n              />\r\n            </label>\r\n            <label htmlFor='userAvatarIMG' className={cx('userAvatarWrapper__labelSpan')}>\r\n              <AddIcon className={cx('userAvatarWrapper__AddICon')} alt='addAvatar' />\r\n              <span className={cx('userAvatarWrapper__addAvatarSpan')}>add avatar</span>\r\n              <input\r\n                id='userAvatarIMG'\r\n                type='file'\r\n                className={cx('userAvatarWrapper__inputFile')}\r\n                accept='image/*,image/jpeg'\r\n                onChange={this.addImageUserAvatar}\r\n              />\r\n            </label>\r\n            {UserAvatar}\r\n          </div>\r\n          <div className={cx('register__userData')}>\r\n            <Field\r\n              component={FieldInputAccount}\r\n              type='text'\r\n              label='User name'\r\n              name='userName'\r\n              idInput='userName'\r\n            />\r\n            <Field\r\n              component={FieldInputAccount}\r\n              type={typePasswordFirstInput}\r\n              isVisibility\r\n              label='Password'\r\n              name='password'\r\n              idInput='password'\r\n              changeTypePassword={this.changeTypePassword('typePasswordFirstInput')}\r\n            />\r\n            <Field\r\n              component={FieldInputAccount}\r\n              type={typePasswordSecondInput}\r\n              isVisibility\r\n              label='Repeat Password'\r\n              name='repeatPassword'\r\n              idInput='repeatPassword'\r\n              changeTypePassword={this.changeTypePassword('typePasswordSecondInput')}\r\n            />\r\n            <button className={cx('accountComponent__buttonSubmit')} type='submit'>Forward</button>\r\n          </div>\r\n          {cropperSrc && (\r\n            <CropperModal\r\n              cropperSrc={cropperSrc}\r\n              setCropperSrc={this.setCropperSrc}\r\n              changeAvatar={changeAvatarAccount}\r\n            />\r\n          )}\r\n        </UserFormBox>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst accountForm = reduxForm({\r\n  asyncValidate: values => db.usersDB.toArray(usersDB => {\r\n    const userNameList = usersDB.map(user => user.userName)\r\n    let errorUserName\r\n    userNameList.find(userEmail => (\r\n      errorUserName = values.userName === userEmail ? 'already have this email in the database' : null))\r\n    if (errorUserName) {\r\n      return Promise.reject({\r\n        userName: errorUserName,\r\n      })\r\n    }\r\n  }),\r\n\r\n  validate: values => {\r\n    const errors = {}\r\n    if (!values.userName) {\r\n      errors.userName = 'Missing User Name'\r\n    } else if (values.userName.length <= 3) {\r\n      errors.userName = 'Must be 4 characters or more'\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = 'Missing Password'\r\n    } else if (values.password.length <= 3) {\r\n      errors.password = 'Must be 4 characters or more'\r\n    }\r\n\r\n    if (!values.repeatPassword) {\r\n      errors.repeatPassword = 'Missing Repeat Password'\r\n    }\r\n    if (values.password !== values.repeatPassword) errors.repeatPassword = \"Passwords doesn't match\"\r\n\r\n    return errors\r\n  },\r\n  form: 'Account',\r\n  enableReinitialize: true,\r\n})(Account)\r\n\r\nAccount.propTypes = {\r\n  userSRCAvatarIMG: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.array,\r\n  ]),\r\n  isQuestion: PropTypes.bool.isRequired,\r\n  continueUser: PropTypes.func.isRequired,\r\n  saveNewUserData: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func,\r\n  changeAvatarAccount: PropTypes.func.isRequired,\r\n  push: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    userName, password, repeatPassword, userSRCAvatarIMG, isQuestion,\r\n  } = state.newUser\r\n  return {\r\n    initialValues: {\r\n      userName, password, repeatPassword,\r\n    },\r\n    userSRCAvatarIMG,\r\n    isQuestion,\r\n    newUser: state.newUser,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    saveNewUserData, continueUser, changeQuestionState, changeAvatarAccount, push,\r\n  },\r\n)(accountForm)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/addingNewUserPage/account/Account.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/addingNewUserPage/account/Account.js	(date 1558904736509)
Index: src/pages/addingNewUserPage/AddingNewUserPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { push } from 'connected-react-router'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { getFormNames, getFormValues } from 'redux-form'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport styles from './AddingNewUser.scss'\r\nimport Account from './account/Account'\r\nimport Contacts from './contacts/Contacts'\r\nimport Capabilities from './capabilities/Capabilities'\r\nimport Profile from './profile/Profile'\r\nimport db from '../../db'\r\n\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass AddingNewUserPage extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      pathname, push,\r\n    } = this.props\r\n    if (pathname === '/profile' || pathname === '/contacts' || pathname === '/capabilities') {\r\n      push('/')\r\n    }\r\n    window.addEventListener('beforeunload', this.onUnload)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('beforeunload', this.onUnload)\r\n  }\r\n\r\n  onUnload = () => {\r\n    const { newUser, activeFormValue } = this.props\r\n    db.newUserDB.update(0, { ...newUser, ...activeFormValue, isQuestion: false })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      pathname, accountFilled, profileFilled, contactsFilled,\r\n    } = this.props\r\n    return (\r\n      <Fragment>\r\n        <h2 className={cx('headline')}>Adding new user</h2>\r\n        <div className={cx('windowNewUser container')}>\r\n          <div className={cx('windowNewUser__tabs')}>\r\n            <div className={cx('windowNewUser__tab', { activeTab: pathname === '/' })}>\r\n              <Link\r\n                to='/'\r\n                className={cx('windowNewUser__link',\r\n                  { activeLink: pathname !== '/' })}\r\n              >\r\n                1. Account\r\n              </Link>\r\n            </div>\r\n            <div className={cx('windowNewUser__tab', { activeTab: pathname === '/profile' })}>\r\n              <Link\r\n                to='/profile'\r\n                className={cx('windowNewUser__link',\r\n                  { activeLink: accountFilled && pathname !== '/profile' })}\r\n              >\r\n                2. Profile\r\n              </Link>\r\n            </div>\r\n            <div className={cx('windowNewUser__tab', { activeTab: pathname === '/contacts' })}>\r\n              <Link\r\n                to='/contacts'\r\n                className={cx('windowNewUser__link',\r\n                  { activeLink: profileFilled && pathname !== '/contacts' })}\r\n              >\r\n                3. Contacts\r\n              </Link>\r\n            </div>\r\n            <div className={cx('windowNewUser__tab', { activeTab: pathname === '/capabilities' })}>\r\n              <Link\r\n                to='/capabilities'\r\n                className={cx('windowNewUser__link',\r\n                  { activeLink: contactsFilled && pathname !== '/capabilities' })}\r\n              >\r\n                4. Capabilities\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route exact path='/' component={Account} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/contacts' component={Contacts} />\r\n            <Route exact path='/capabilities' component={Capabilities} />\r\n            <Redirect to='/not-found' />\r\n          </Switch>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nAddingNewUserPage.propTypes = {\r\n  pathname: PropTypes.string.isRequired,\r\n  accountFilled: PropTypes.bool.isRequired,\r\n  profileFilled: PropTypes.bool.isRequired,\r\n  contactsFilled: PropTypes.bool.isRequired,\r\n  activeFormValue: PropTypes.object,\r\n  newUser: PropTypes.object,\r\n  push: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    accountFilled, profileFilled, contactsFilled,\r\n  } = state.newUser\r\n  const activeFormName = getFormNames()(state)\r\n  const activeFormValue = getFormValues(activeFormName[0])(state)\r\n  const { pathname } = state.router.location\r\n  return {\r\n    newUser: state.newUser,\r\n    activeFormValue,\r\n    pathname,\r\n    accountFilled,\r\n    profileFilled,\r\n    contactsFilled,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { push },\r\n)(AddingNewUserPage)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/addingNewUserPage/AddingNewUserPage.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/addingNewUserPage/AddingNewUserPage.js	(date 1558904736509)
Index: src/pages/editUserPage/EditUserPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './EditUserPage.scss'\r\nimport { ReactComponent as EditIcon } from '../../img/icon/edit.svg'\r\nimport { fetchEditUser } from '../../actions/actionEditUser'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass EditUserPage extends Component {\r\n  componentDidMount() {\r\n    const { fetchEditUser, id } = this.props\r\n    fetchEditUser(id)\r\n  }\r\n\r\n  render() {\r\n    const { id, editUser } = this.props\r\n    const {\r\n      userName, userSRCAvatarIMG, firstName, lastName, birthDate, email, address, company, fax,\r\n      facebookLink, phoneArray, selectSkills, checkboxArt, checkboxSport, checkboxJustWant,\r\n      checkboxFemale, checkboxGuitar, checkboxWtf,\r\n    } = editUser\r\n    return (\r\n      <div className={cx('container')}>\r\n        <Link className={cx('linkBackPage')} to='/users'>{'<  Users List'}</Link>\r\n        <h2 className={cx('headline')}>User Name</h2>\r\n        {birthDate && (\r\n          <div className={cx('userNamePageContainer container')}>\r\n            <img src={userSRCAvatarIMG} className={cx('userNamePageContainer__avatar')} alt='userSRCAvatarIMG' />\r\n            <div className={cx('accountDataWrapper')}>\r\n              <div className={cx('accountDataWrapper__block')}>\r\n                <div className={cx('accountDataWrapper__section')}>\r\n                  <h3 className={cx('accountDataWrapper__h3')}>Account</h3>\r\n                  <Link to={`/edit-user/${id}`}>\r\n                    <button type='button' className={cx('accountDataWrapper__buttonEdit')}>\r\n                      <EditIcon className={cx('accountDataWrapper__editIcon')} />\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n                <div className={cx('accountDataWrapper__sectionInfo')}>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>User name:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{userName}</span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Password</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>*******</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={cx('accountDataWrapper__block')}>\r\n                <div className={cx('accountDataWrapper__section')}>\r\n                  <h3 className={cx('accountDataWrapper__h3')}>Personal</h3>\r\n                  <Link to={`/edit-user/${id}/profile`}>\r\n                    <button type='button' className={cx('accountDataWrapper__buttonEdit')}>\r\n                      <EditIcon className={cx('accountDataWrapper__editIcon')} />\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n                <div className={cx('accountDataWrapper__sectionInfo')}>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>First name:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{firstName}</span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Last name:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{lastName}</span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Birth date:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{birthDate.toLocaleDateString()}</span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Email:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{email}</span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Adress:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{address}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={cx('accountDataWrapper__block')}>\r\n                <div className={cx('accountDataWrapper__section')}>\r\n                  <h3 className={cx('accountDataWrapper__h3')}>Contacts</h3>\r\n                  <Link to={`/edit-user/${id}/contacts`}>\r\n                    <button type='button' className={cx('accountDataWrapper__buttonEdit')}>\r\n                      <EditIcon className={cx('accountDataWrapper__editIcon')} />\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n                <div className={cx('accountDataWrapper__sectionInfo')}>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Company:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{company}</span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Fax:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>{fax}</span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Facebook Link:</h4>\r\n                    <a\r\n                      className={cx('accountDataWrapper__span accountDataWrapper__a')}\r\n                      href={`https://${facebookLink}`}\r\n                    >\r\n                      {facebookLink}\r\n                    </a>\r\n                  </div>\r\n                  {phoneArray.length > 0 && (\r\n                    <div className={cx('accountDataWrapper__wrapper')}>\r\n                      <h4 className={cx('accountDataWrapper__h4')}>Phone #1:</h4>\r\n                      <span className={cx('accountDataWrapper__span')}>{phoneArray[0].phone}</span>\r\n                    </div>\r\n                  )}\r\n                  {phoneArray.length > 1 && (\r\n                    <div className={cx('accountDataWrapper__wrapper')}>\r\n                      <h4 className={cx('accountDataWrapper__h4')}>Phone #2:</h4>\r\n                      <span className={cx('accountDataWrapper__span')}>{phoneArray[1].phone}</span>\r\n                    </div>\r\n                  )}\r\n                  {phoneArray.length > 2 && (\r\n                    <div className={cx('accountDataWrapper__wrapper')}>\r\n                      <h4 className={cx('accountDataWrapper__h4')}>Phone #3:</h4>\r\n                      <span className={cx('accountDataWrapper__span')}>{phoneArray[0].phone}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={cx('accountDataWrapper__block')}>\r\n                <div className={cx('accountDataWrapper__section')}>\r\n                  <h3 className={cx('accountDataWrapper__h3')}>Capabilities</h3>\r\n                  <Link to={`/edit-user/${id}/capabilities`}>\r\n                    <button type='button' className={cx('accountDataWrapper__buttonEdit')}>\r\n                      <EditIcon className={cx('accountDataWrapper__editIcon')} />\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n                <div className={cx('accountDataWrapper__sectionInfo')}>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Skills:</h4>\r\n                    <span className={cx('accountDataWrapper__span')}>\r\n                      {selectSkills.map(user => (\r\n                        `${user.value},  `\r\n                      ))}\r\n                    </span>\r\n                  </div>\r\n                  <div className={cx('accountDataWrapper__wrapper')}>\r\n                    <h4 className={cx('accountDataWrapper__h4')}>Hobbies:</h4>\r\n                    <div className={cx('accountDataWrapper__wrapperHobbies')}>\r\n                      {checkboxArt && <span className={cx('accountDataWrapper__span')}>{checkboxArt}</span>}\r\n                      {checkboxSport && <span className={cx('accountDataWrapper__span')}>{checkboxSport}</span>}\r\n                      {checkboxJustWant && <span className={cx('accountDataWrapper__span')}>{checkboxJustWant}</span>}\r\n                      {checkboxFemale && <span className={cx('accountDataWrapper__span')}>{checkboxFemale}</span>}\r\n                      {checkboxGuitar && <span className={cx('accountDataWrapper__span')}>{checkboxGuitar}</span>}\r\n                      {checkboxWtf && <span className={cx('accountDataWrapper__span')}>{checkboxWtf}</span>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nEditUserPage.propTypes = {\r\n  editUser: PropTypes.object.isRequired,\r\n  fetchEditUser: PropTypes.func.isRequired,\r\n  id: PropTypes.number,\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = Number(ownProps.match.params.id)\r\n  const { editUser } = state.editUserReducer\r\n  return {\r\n    editUser,\r\n    id,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchEditUser },\r\n)(EditUserPage)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/editUserPage/EditUserPage.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/editUserPage/EditUserPage.js	(date 1558904736509)
Index: src/pages/editingPage/capabilitiesEditing/CapabilitiesEditing.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport { saveChangesCapabilitiesEditing, fetchEditUser } from '../../../actions/actionEditUser'\r\nimport styles from '../../../components/userFormBox/UserFormBox.scss'\r\nimport FieldSelectCapabilities\r\n  from '../../../components/fieldForm/fieldSelectCapabilities/FieldSelectCapabilities'\r\nimport FieldTextareaCapabilities\r\n  from '../../../components/fieldForm/fieldTextareaCapabilities/FieldTextareaCapabilities'\r\nimport FieldCheckboxCapabilities\r\n  from '../../../components/fieldForm/fieldCheckboxCapabilities/FieldCheckboxCapabilities'\r\nimport UserFormBox from '../../../components/userFormBox/UserFormBox'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass CapabilitiesEditing extends Component {\r\n  componentDidMount() {\r\n    const { fetchEditUser, id } = this.props\r\n    fetchEditUser(id)\r\n  }\r\n\r\n  onSubmit = values => {\r\n    const { saveChangesCapabilitiesEditing, id } = this.props\r\n    saveChangesCapabilitiesEditing(values.selectSkills, values.textareaField, values.checkboxArt, values.checkboxSport,\r\n      values.checkboxJustWant, values.checkboxFemale, values.checkboxGuitar, values.checkboxWtf, id)\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props\r\n    return (\r\n      <UserFormBox handleSubmit={handleSubmit(this.onSubmit)}>\r\n        <div className={cx('userFormBox__sideLeft')}>\r\n          <Field\r\n            component={FieldSelectCapabilities}\r\n            name='selectSkills'\r\n            label='Skills'\r\n          />\r\n          <Field\r\n            component={FieldTextareaCapabilities}\r\n            name='textareaField'\r\n            label='Additional information'\r\n            idTextarea='idFieldTextarea'\r\n          />\r\n        </div>\r\n        <div className={cx('userFormBox__sideRight')}>\r\n          <h3 className={cx('userFormBox__hobbies')}>My hobbies</h3>\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxArt'\r\n            span='Art'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxSport'\r\n            span='Sport,fitness, aerobica and staff like that'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxJustWant'\r\n            span='just want to play games, I’m not living in this life'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxFemale'\r\n            span='I’m a female... I’m doing nothing. Every day.'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxGuitar'\r\n            span='Guitar, guitar and guitar again. I’m fall in love with it.'\r\n          />\r\n          <Field\r\n            component={FieldCheckboxCapabilities}\r\n            type='checkbox'\r\n            name='checkboxWtf'\r\n            span='WTF is “hobbies”???'\r\n          />\r\n          <div className={cx('userFormBox__wrapperButton')}>\r\n            <button type='submit' className={cx('userFormBox__saveNewListButton')}>\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </UserFormBox>\r\n    )\r\n  }\r\n}\r\n\r\nCapabilitiesEditing.propTypes = {\r\n  id: PropTypes.number,\r\n  saveChangesCapabilitiesEditing: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  fetchEditUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst CapabilitiesEditingForm = reduxForm({\r\n  validate: values => {\r\n    const errors = {}\r\n\r\n    if (!values.selectSkills) {\r\n      errors.selectSkills = 'Missing Skills'\r\n    } else if (values.selectSkills.length <= 2) {\r\n      errors.selectSkills = 'select at least 3 option'\r\n    }\r\n    if (!values.textareaField) {\r\n      errors.textareaField = 'Missing Additional Information'\r\n    } else if (values.textareaField.length <= 10) {\r\n      errors.textareaField = 'Must be 11 characters or more'\r\n    }\r\n    if (!values.checkboxArt && !values.checkboxSport && !values.checkboxJustWant && !values.checkboxFemale\r\n      && !values.checkboxGuitar && !values.checkboxWtf) {\r\n      errors.checkboxWtf = 'Missing My Hobbies'\r\n    }\r\n\r\n    return errors\r\n  },\r\n  form: 'CapabilitiesEditing',\r\n  enableReinitialize: true,\r\n})(CapabilitiesEditing)\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = Number(ownProps.match.params.id)\r\n  const {\r\n    selectSkills, textareaField, checkboxArt, checkboxSport, checkboxJustWant, checkboxFemale,\r\n    checkboxGuitar, checkboxWtf,\r\n  } = state.editUserReducer.editUser\r\n  return {\r\n    initialValues: {\r\n      selectSkills,\r\n      textareaField,\r\n      checkboxArt,\r\n      checkboxSport,\r\n      checkboxJustWant,\r\n      checkboxFemale,\r\n      checkboxGuitar,\r\n      checkboxWtf,\r\n    },\r\n    id,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { saveChangesCapabilitiesEditing, fetchEditUser },\r\n)(CapabilitiesEditingForm)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/editingPage/capabilitiesEditing/CapabilitiesEditing.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/editingPage/capabilitiesEditing/CapabilitiesEditing.js	(date 1558904736509)
Index: src/pages/editingPage/contactsEditing/ContactsEditing.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Field, reduxForm, FieldArray } from 'redux-form'\r\nimport styles from '../../../components/userFormBox/UserFormBox.scss'\r\nimport { saveChangesContactsEditing, fetchEditUser } from '../../../actions/actionEditUser'\r\nimport UserFormBox from '../../../components/userFormBox/UserFormBox'\r\nimport FieldInputNewUser from '../../../components/fieldForm/fieldInputNewUser/FieldInputNewUser'\r\nimport FieldSelectContacts from '../../../components/fieldForm/fieldSelectContacts/FieldSelectContacts'\r\nimport FieldArrayPhone from '../../../components/fieldForm/fieldArrayPhone/FieldArrayPhone'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass ContactsEditing extends Component {\r\n  componentDidMount() {\r\n    const { fetchEditUser, id } = this.props\r\n    fetchEditUser(id)\r\n  }\r\n\r\n  onSubmit = values => {\r\n    const { saveChangesContactsEditing, id } = this.props\r\n    saveChangesContactsEditing(values.company, values.githubLink, values.facebookLink, values.selectLanguage,\r\n      values.fax, values.phoneArray, id)\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props\r\n    return (\r\n      <UserFormBox handleSubmit={handleSubmit(this.onSubmit)}>\r\n        <div className={cx('userFormBox__sideLeft')}>\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            label='Company'\r\n            name='company'\r\n            idField='fieldCompany'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            span\r\n            label='Github link'\r\n            name='githubLink'\r\n            idField='fieldGithubLink'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            span\r\n            label='Facebook link'\r\n            name='facebookLink'\r\n            placeholder='www.facebook.com/hdfk_142_23lelf/'\r\n            idField='fieldFacebookLink'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <Field\r\n            component={FieldSelectContacts}\r\n            name='selectLanguage'\r\n            label='Main language'\r\n          />\r\n        </div>\r\n        <div className={cx('userFormBox__sideRight')}>\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            label='Fax'\r\n            name='fax'\r\n            mask='+7 (999) 999-99-99'\r\n            idField='fieldFax'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <FieldArray\r\n            component={FieldArrayPhone}\r\n            name='phoneArray'\r\n          />\r\n          <div className={cx('userFormBox__addPhone')} />\r\n          <div className={cx('userFormBox__wrapperButton')}>\r\n            <button type='submit' className={cx('userFormBox__saveNewListButton')}>\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </UserFormBox>\r\n    )\r\n  }\r\n}\r\n\r\nContactsEditing.propTypes = {\r\n  id: PropTypes.number,\r\n  saveChangesContactsEditing: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  fetchEditUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst ContactsEditingForm = reduxForm({\r\n  validate: values => {\r\n    const errors = {}\r\n    if (!values.selectLanguage) {\r\n      errors.selectLanguage = 'Missing Main language'\r\n    }\r\n\r\n    if (!values.company) {\r\n      errors.company = 'Missing Company'\r\n    } else if (values.company.length <= 2) {\r\n      errors.company = 'Must be 3 characters or more'\r\n    }\r\n\r\n    if (!values.githubLink) {\r\n      errors.githubLink = 'Missing Github Link'\r\n    } else if (values.githubLink.length <= 5) {\r\n      errors.githubLink = 'Must be 4 characters or more'\r\n    }\r\n\r\n    if (!values.facebookLink) {\r\n      errors.facebookLink = 'Missing Facebook Link'\r\n    } else if (values.facebookLink.length <= 5) {\r\n      errors.facebookLink = 'Must be 4 characters or more'\r\n    }\r\n\r\n    if (!values.fax) {\r\n      errors.fax = 'Missing Facebook Fax'\r\n    } else {\r\n      errors.fax = values.fax.charAt(17) >= 0 ? null : 'Must be 10 digits'\r\n    }\r\n\r\n    if (!values.phoneN1) {\r\n      errors.phoneN1 = 'Missing Phone Number'\r\n    } else {\r\n      errors.phoneN1 = values.phoneN1.charAt(17) >= 0 ? null : 'Must be 10 digits'\r\n    }\r\n\r\n    if (!values.phoneN2) {\r\n      errors.phoneN2 = 'Missing Phone Number'\r\n    } else {\r\n      errors.phoneN2 = values.phoneN2.charAt(17) >= 0 ? null : 'Must be 10 digits'\r\n    }\r\n    if (!values.phoneN3) {\r\n      errors.phoneN3 = 'Missing Phone Number'\r\n    } else {\r\n      errors.phoneN3 = values.phoneN3.charAt(17) >= 0 ? null : 'Must be 10 digits'\r\n    }\r\n\r\n    return errors\r\n  },\r\n  form: 'ContactsEditing',\r\n  enableReinitialize: true,\r\n})(ContactsEditing)\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = Number(ownProps.match.params.id)\r\n  const {\r\n    company, githubLink, facebookLink, selectLanguage, fax, phoneArray,\r\n  } = state.editUserReducer.editUser\r\n  return {\r\n    initialValues: {\r\n      company, githubLink, facebookLink, selectLanguage, fax, phoneArray,\r\n    },\r\n    id,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { saveChangesContactsEditing, fetchEditUser },\r\n)(ContactsEditingForm)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/editingPage/contactsEditing/ContactsEditing.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/editingPage/contactsEditing/ContactsEditing.js	(date 1558904736509)
Index: src/pages/editingPage/profileEditing/ProfileEditing.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport styles from '../../../components/userFormBox/UserFormBox.scss'\r\nimport { saveChangesProfileEditing, fetchEditUser } from '../../../actions/actionEditUser'\r\nimport UserFormBox from '../../../components/userFormBox/UserFormBox'\r\nimport FieldInputNewUser from '../../../components/fieldForm/fieldInputNewUser/FieldInputNewUser'\r\nimport DateTimePickerProfile\r\n  from '../../../components/fieldForm/dateTimePickerProfile/DateTimePickerProfile'\r\nimport FieldRadioProfile from '../../../components/fieldForm/fieldRadioProfile/FieldRadioProfile'\r\nimport db from '../../../db'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass ProfileEditing extends Component {\r\n  componentDidMount() {\r\n    const { fetchEditUser, id } = this.props\r\n    fetchEditUser(id)\r\n  }\r\n\r\n  onSubmit = values => {\r\n    const { saveChangesProfileEditing, id } = this.props\r\n    saveChangesProfileEditing(values.firstName, values.lastName, values.birthDate, values.email,\r\n      values.address, values.gender, id)\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props\r\n    return (\r\n      <UserFormBox handleSubmit={handleSubmit(this.onSubmit)}>\r\n        <div className={cx('userFormBox__sideLeft')}>\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            span\r\n            label='First name'\r\n            name='firstName'\r\n            idField='fieldFirstName'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            span\r\n            label='Last name'\r\n            name='lastName'\r\n            idField='fieldLastName'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <Field name='birthDate' component={DateTimePickerProfile} />\r\n        </div>\r\n        <div className={cx('userFormBox__sideRight')}>\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            span\r\n            label='Email'\r\n            name='email'\r\n            idField='fieldEmail'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <Field\r\n            component={FieldInputNewUser}\r\n            type='text'\r\n            span\r\n            label='Address'\r\n            name='address'\r\n            idField='fieldAddress'\r\n            classNameLabel='inputNewUser'\r\n          />\r\n          <h5>Gender</h5>\r\n          <div className={cx('userFormBox__wrapperGender')}>\r\n            <Field\r\n              component={FieldRadioProfile}\r\n              type='radio'\r\n              label='Male'\r\n              name='gender'\r\n              value='male'\r\n              idField='fieldMale'\r\n            />\r\n            <Field\r\n              component={FieldRadioProfile}\r\n              type='radio'\r\n              label='Female'\r\n              name='gender'\r\n              value='female'\r\n              idField='fieldFemale'\r\n            />\r\n          </div>\r\n          <div className={cx('userFormBox__wrapperButton')}>\r\n            <button type='submit' className={cx('userFormBox__saveNewListButton')}>\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </UserFormBox>\r\n    )\r\n  }\r\n}\r\n\r\nProfileEditing.propTypes = {\r\n  id: PropTypes.number,\r\n  saveChangesProfileEditing: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  fetchEditUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst ProfileEditingForm = reduxForm({\r\n  validate: values => {\r\n    const errors = {}\r\n    if (!values.birthDate) {\r\n      errors.birthDate = 'Missing Birth Date'\r\n    } else if ((new Date().getFullYear() - values.birthDate.getFullYear()) < 18) {\r\n      errors.birthDate = 'Sorry, you must be at least 18 years old'\r\n    }\r\n\r\n    if (!values.gender) {\r\n      errors.gender = 'Missing Gender'\r\n    }\r\n\r\n    if (!values.firstName) {\r\n      errors.firstName = 'Missing First name'\r\n    } else if (values.firstName.length <= 2) {\r\n      errors.firstName = 'Must be 3 characters or more'\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = 'Missing Last name'\r\n    } else if (values.lastName.length <= 2) {\r\n      errors.lastName = 'Must be 3 characters or more'\r\n    }\r\n\r\n    if (!values.address) {\r\n      errors.address = 'Missing Address'\r\n    }\r\n    if (!values.email) {\r\n      errors.email = 'Missing Email'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n  },\r\n  form: 'ProfileEditing',\r\n  asyncValidate: (values, dispatch, props) => {\r\n    const { id } = props\r\n    return db.usersDB.toArray(usersDB => {\r\n      const userFilterName = usersDB.filter(user => user.id !== id)\r\n      const userEmailList = userFilterName.map(user => user.email)\r\n      let errorEmail\r\n      userEmailList.find(userEmail => (\r\n        errorEmail = values.email === userEmail ? 'already have this email in the database' : null))\r\n      if (errorEmail) {\r\n        return Promise.reject({\r\n          email: errorEmail,\r\n        })\r\n      }\r\n    })\r\n  },\r\n  enableReinitialize: true,\r\n})(ProfileEditing)\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = Number(ownProps.match.params.id)\r\n  const {\r\n    firstName, lastName, birthDate, email, address, gender,\r\n  } = state.editUserReducer.editUser\r\n  return {\r\n    initialValues: {\r\n      firstName, lastName, birthDate, email, address, gender,\r\n    },\r\n    id,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { saveChangesProfileEditing, fetchEditUser },\r\n)(ProfileEditingForm)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/editingPage/profileEditing/ProfileEditing.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/editingPage/profileEditing/ProfileEditing.js	(date 1558904736509)
Index: src/pages/editingPage/accountEditing/AccountEditing.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport styles from '../../../components/userFormBox/UserFormBox.scss'\r\nimport { ReactComponent as UserAvatarIcon } from '../../../img/icon/UserAvatar.svg'\r\nimport { ReactComponent as AddIcon } from '../../../img/icon/add.svg'\r\nimport { saveChangesAccountEditing, changeAvatarAccountEditing, fetchEditUser } from '../../../actions/actionEditUser'\r\nimport FieldInputAccount from '../../../components/fieldForm/fieldInputAccount/FieldInputAccount'\r\nimport UserFormBox from '../../../components/userFormBox/UserFormBox'\r\nimport CropperModal from '../../../components/cropperModalWindow/CropperModal'\r\nimport db from '../../../db'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass AccountEditing extends Component {\r\n  state = {\r\n    avatarIMGError: null,\r\n    typePasswordFirstInput: 'text',\r\n    typePasswordSecondInput: 'text',\r\n    cropperSrc: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { fetchEditUser, id } = this.props\r\n    fetchEditUser(id)\r\n  }\r\n\r\n  addImageUserAvatar = event => {\r\n    event.preventDefault()\r\n    const reader = new FileReader()\r\n    const fileIMG = event.target.files[0]\r\n    const fileSize = fileIMG.size / 1024 / 1024\r\n    if (fileSize < 1) {\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          avatarIMGError: false,\r\n          cropperSrc: reader.result,\r\n        })\r\n      }\r\n      reader.readAsDataURL(fileIMG)\r\n    } else {\r\n      this.setState({\r\n        avatarIMGError: 'File should not exceed 1 mb',\r\n      })\r\n    }\r\n  }\r\n\r\n  onSubmit = values => {\r\n    const { saveChangesAccountEditing, id, userSRCAvatarIMG } = this.props\r\n    saveChangesAccountEditing(values.userName, values.password, values.repeatPassword, userSRCAvatarIMG, id)\r\n  }\r\n\r\n  changeTypePassword = nameTypePassword => () => {\r\n    const { [nameTypePassword]: typePassword } = this.state\r\n    if (typePassword === 'text') {\r\n      this.setState({\r\n        [nameTypePassword]: 'password',\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [nameTypePassword]: 'text',\r\n      })\r\n    }\r\n  }\r\n\r\n  setCropperSrc = () => {\r\n    this.setState({\r\n      cropperSrc: null,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit, userSRCAvatarIMG, changeAvatarAccountEditing } = this.props\r\n    const {\r\n      avatarIMGError, typePasswordFirstInput, typePasswordSecondInput, cropperSrc,\r\n    } = this.state\r\n    const userAvatarIMG = userSRCAvatarIMG\r\n      ? <img className={cx('userAvatarWrapper__userAvatarIMG')} src={userSRCAvatarIMG} alt='userAvatar' />\r\n      : <UserAvatarIcon className={cx('userAvatarWrapper__userAvatarSVG')} alt='userAvatar' />\r\n    const UserAvatar = avatarIMGError\r\n      ? <p className={cx('userAvatarWrapper__avatarError')}>{avatarIMGError}</p> : null\r\n    return (\r\n      <UserFormBox handleSubmit={handleSubmit(this.onSubmit)} classForm='userFormBoxAccount'>\r\n        <div className={cx('userAvatarWrapper')}>\r\n          <label htmlFor='userAvatar'>\r\n            {userAvatarIMG}\r\n            <input\r\n              id='userAvatar'\r\n              type='file'\r\n              className={cx('userAvatarWrapper__inputFile')}\r\n              accept='image/*,image/jpeg'\r\n              onChange={this.addImageUserAvatar}\r\n            />\r\n          </label>\r\n          <label htmlFor='userAvatarIMG' className={cx('userAvatarWrapper__labelSpan')}>\r\n            <AddIcon className={cx('userAvatarWrapper__AddICon')} alt='addAvatar' />\r\n            <span className={cx('userAvatarWrapper__addAvatarSpan')}>add avatar</span>\r\n            <input\r\n              id='userAvatarIMG'\r\n              type='file'\r\n              className={cx('userAvatarWrapper__inputFile')}\r\n              accept='image/*,image/jpeg'\r\n              onChange={this.addImageUserAvatar}\r\n            />\r\n          </label>\r\n          {UserAvatar}\r\n        </div>\r\n        <div className={cx('register__userData')}>\r\n          <Field\r\n            component={FieldInputAccount}\r\n            type='text'\r\n            label='User name'\r\n            name='userName'\r\n            idInput='userName'\r\n          />\r\n          <Field\r\n            component={FieldInputAccount}\r\n            type={typePasswordFirstInput}\r\n            isVisibility\r\n            label='Password'\r\n            name='password'\r\n            idInput='password'\r\n            changeTypePassword={this.changeTypePassword('typePasswordFirstInput')}\r\n          />\r\n          <Field\r\n            component={FieldInputAccount}\r\n            type={typePasswordSecondInput}\r\n            isVisibility\r\n            label='Repeat Password'\r\n            name='repeatPassword'\r\n            idInput='repeatPassword'\r\n            changeTypePassword={this.changeTypePassword('typePasswordSecondInput')}\r\n          />\r\n          <button className={cx('accountComponent__buttonSubmit')} type='submit'>Save</button>\r\n        </div>\r\n        {cropperSrc && (\r\n          <CropperModal\r\n            cropperSrc={cropperSrc}\r\n            setCropperSrc={this.setCropperSrc}\r\n            changeAvatar={changeAvatarAccountEditing}\r\n          />\r\n        )}\r\n      </UserFormBox>\r\n    )\r\n  }\r\n}\r\n\r\nconst AccountEditingForm = reduxForm({\r\n  validate: values => {\r\n    const errors = {}\r\n    if (!values.userName) {\r\n      errors.userName = 'Missing User Name'\r\n    } else if (values.userName.length <= 3) {\r\n      errors.userName = 'Must be 4 characters or more'\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = 'Missing Password'\r\n    } else if (values.password.length <= 3) {\r\n      errors.password = 'Must be 4 characters or more'\r\n    }\r\n\r\n    if (!values.repeatPassword) {\r\n      errors.repeatPassword = 'Missing Repeat Password'\r\n    }\r\n    if (values.password !== values.repeatPassword) errors.repeatPassword = \"Passwords doesn't match\"\r\n\r\n    return errors\r\n  },\r\n  asyncValidate: (values, dispatch, props) => {\r\n    const { id } = props\r\n    return db.usersDB.toArray(usersDB => {\r\n      const userFilterName = usersDB.filter(user => user.id !== id)\r\n      const userNameList = userFilterName.map(user => user.userName)\r\n      let errorUserName\r\n      userNameList.find(userEmail => (\r\n        errorUserName = values.userName === userEmail ? 'already have this email in the database' : null))\r\n      if (errorUserName) {\r\n        return Promise.reject({\r\n          userName: errorUserName,\r\n        })\r\n      }\r\n    })\r\n  },\r\n  form: 'AccountEditing',\r\n  enableReinitialize: true,\r\n})(AccountEditing)\r\n\r\nAccountEditing.propTypes = {\r\n  id: PropTypes.number,\r\n  userSRCAvatarIMG: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.array,\r\n  ]),\r\n  saveChangesAccountEditing: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func,\r\n  changeAvatarAccountEditing: PropTypes.func.isRequired,\r\n  fetchEditUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = Number(ownProps.match.params.id)\r\n  const {\r\n    userName, password, repeatPassword, userSRCAvatarIMG,\r\n  } = state.editUserReducer.editUser\r\n  return {\r\n    initialValues: {\r\n      userName, password, repeatPassword,\r\n    },\r\n    userSRCAvatarIMG,\r\n    id,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    saveChangesAccountEditing, changeAvatarAccountEditing, fetchEditUser,\r\n  },\r\n)(AccountEditingForm)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/editingPage/accountEditing/AccountEditing.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/editingPage/accountEditing/AccountEditing.js	(date 1558904736509)
Index: src/pages/editingPage/EditingPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './EditingPage.scss'\r\nimport AccountEditing from './accountEditing/AccountEditing'\r\nimport ContactsEditing from './contactsEditing/ContactsEditing'\r\nimport CapabilitiesEditing from './capabilitiesEditing/CapabilitiesEditing'\r\nimport ProfileEditing from './profileEditing/ProfileEditing'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst EditingPage = ({ pathname, id }) => (\r\n  <div className={cx('container')}>\r\n    <Link className={cx('linkBackPage')} to={`/user/${id}`}>{'<  User Profile'}</Link>\r\n    <h2 className={cx('headline')}>Editing</h2>\r\n    <div className={cx('editingPage')}>\r\n      <div className={cx('editingPage__tabs')}>\r\n        <div className={cx('editingPage__tab', {\r\n          activeTab: pathname.charAt(pathname.length - 1) >= 0,\r\n        })}\r\n        >\r\n          <Link to={`/edit-user/${id}`} className={cx('editingPage__link')}>1. Account</Link>\r\n        </div>\r\n        <div className={cx('editingPage__tab', { activeTab: pathname.includes('/profile') })}>\r\n          <Link to={`/edit-user/${id}/profile`} className={cx('editingPage__link')}>2. Profile</Link>\r\n        </div>\r\n        <div className={cx('editingPage__tab', { activeTab: pathname.includes('/contacts') })}>\r\n          <Link to={`/edit-user/${id}/contacts`} className={cx('editingPage__link')}>3. Contacts</Link>\r\n        </div>\r\n        <div className={cx('editingPage__tab', { activeTab: pathname.includes('/capabilities') })}>\r\n          <Link to={`/edit-user/${id}/capabilities`} className={cx('editingPage__link')}>4. Capabilities</Link>\r\n        </div>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path='/edit-user/:id' component={AccountEditing} />\r\n        <Route exact path='/edit-user/:id/profile' component={ProfileEditing} />\r\n        <Route exact path='/edit-user/:id/contacts' component={ContactsEditing} />\r\n        <Route exact path='/edit-user/:id/capabilities' component={CapabilitiesEditing} />\r\n        <Redirect to='/not-found' />\r\n      </Switch>\r\n    </div>\r\n  </div>\r\n)\r\n\r\n\r\nEditingPage.propTypes = {\r\n  pathname: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = Number(ownProps.match.params.id)\r\n  const { pathname } = state.router.location\r\n  return {\r\n    pathname,\r\n    id,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(EditingPage)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/editingPage/EditingPage.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/editingPage/EditingPage.js	(date 1558904736509)
Index: src/pages/usersPage/noHaveUserRow/NoHaveUserRow.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { createUser } from '../../../actions/actionNewUser'\r\nimport styles from './NoHaveUserRow.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst NoHaveUserRow = ({ createUser }) => (\r\n  <Fragment>\r\n    <h2 className={cx('usersPage__noUsersH2')}>\r\n    No users here :(\r\n    </h2>\r\n    <button type='button' className={cx('usersPage__createUserButton')} onClick={createUser}>Create new user</button>\r\n  </Fragment>\r\n)\r\n\r\nNoHaveUserRow.propTypes = {\r\n  createUser: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { createUser },\r\n)(NoHaveUserRow)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/usersPage/noHaveUserRow/NoHaveUserRow.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/usersPage/noHaveUserRow/NoHaveUserRow.js	(date 1558904736509)
Index: src/helpers/validateUsersUrl.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import queryString from 'query-string'\r\n\r\nexport const validateUsersUrl = search => {\r\n  const valueQuery = queryString.parse(search)\r\n  const { page, per_page } = valueQuery\r\n  return search && (!page || !per_page || !(per_page > 0) || !(page > 0))\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/helpers/validateUsersUrl.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/helpers/validateUsersUrl.js	(date 1558904736509)
Index: src/pages/usersPage/pagination/Pagination.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport _ from 'lodash'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport styles from './Pagination.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nexport const Pagination = ({\r\n  pagesCount, currentPage, limit, changePage,\r\n}) => {\r\n  const indentLimit = Math.floor(limit / 2)\r\n  const indentPage = (pagesCount - currentPage) >= indentLimit ? indentLimit\r\n    : limit - 1 - (pagesCount - currentPage)\r\n  return (\r\n    <div className={cx('usersPage__pagination')}>\r\n      <button\r\n        disabled={currentPage === 1}\r\n        type='button'\r\n        className={cx('pagination__arrows', { pagination__activeTabs: currentPage !== 1 })}\r\n        onClick={changePage(currentPage - 1)}\r\n      >\r\n        {'<'}\r\n      </button>\r\n      {currentPage > indentLimit + 1 && pagesCount > limit && (\r\n      <button\r\n        type='button'\r\n        className={cx('pagination__points')}\r\n        onClick={changePage(1)}\r\n      >\r\n        ...\r\n      </button>\r\n      )}\r\n      {_.times(Math.min(limit, pagesCount), page => {\r\n        const nowPage = currentPage > indentPage ? page + currentPage - indentPage : page + 1\r\n        return (\r\n          <button\r\n            disabled={currentPage === nowPage}\r\n            key={nowPage}\r\n            type='button'\r\n            className={cx('pagination__tabs', { pagination__activeTabs: currentPage === nowPage })}\r\n            onClick={changePage(nowPage)}\r\n          >\r\n            {nowPage}\r\n          </button>\r\n        )\r\n      })}\r\n      {currentPage < pagesCount - indentLimit && pagesCount > limit && (\r\n      <button\r\n        disabled={currentPage === pagesCount}\r\n        type='button'\r\n        className={cx('pagination__points')}\r\n        onClick={changePage(pagesCount)}\r\n      >\r\n        ...\r\n      </button>\r\n      )}\r\n      <button\r\n        disabled={currentPage === pagesCount}\r\n        type='button'\r\n        className={cx('pagination__arrows', { pagination__activeTabs: currentPage !== pagesCount })}\r\n        onClick={changePage(currentPage + 1)}\r\n      >\r\n        {'>'}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  pagesCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  limit: PropTypes.number.isRequired,\r\n  changePage: PropTypes.func.isRequired,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/usersPage/pagination/Pagination.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/usersPage/pagination/Pagination.js	(date 1558904736509)
Index: src/pages/usersPage/userRow/UserRow.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport moment from 'moment/moment'\r\nimport styles from './UserRow.scss'\r\nimport { ReactComponent as CloseIcon } from '../../../img/icon/close.svg'\r\nimport { ReactComponent as EditIcon } from '../../../img/icon/edit.svg'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass UserRow extends Component {\r\n  state = {\r\n    deleteUserClass: false,\r\n  }\r\n\r\n  handleClickOutside = () => {\r\n    const { deleteUserClass } = this.state\r\n    if (deleteUserClass) {\r\n      this.setState({\r\n        deleteUserClass: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  showDeleteButton = () => {\r\n    this.setState({\r\n      deleteUserClass: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user, deleteUser } = this.props\r\n    const { deleteUserClass } = this.state\r\n    return (\r\n      <tr className={cx('userRow', { deleteUserClass })}>\r\n        <td className={cx('userRow__fistTD')}>\r\n          <img className={cx('userRow__img')} src={user.userSRCAvatarIMG} alt='userSRCAvatarIMG' />\r\n          <div className={cx('userRow__wrapperDiv')}>\r\n            <h4 className={cx('userRow__h4')}>\r\n              {`${user.firstName} ${user.lastName}`}\r\n            </h4>\r\n            <span className={cx('userRow__span')}>{user.userName}</span>\r\n          </div>\r\n        </td>\r\n        <td className={cx('userRow__td')}>\r\n          <div className={cx('userRow__div')}>{user.company}</div>\r\n        </td>\r\n        <td className={cx('userRow__td')}>\r\n          <div className={cx('userRow__div')}>{user.email}</div>\r\n        </td>\r\n        <td className={cx('userRow__td')}>\r\n          <div className={cx('userRow__div')}>\r\n            <span className={cx('userRow__lastUpdate')}>\r\n              {moment(moment(user.lastUpdate).format('YYYY-MM-DD HH:mm:ss'), 'YYYY-MM-DD HH:mm:ss').fromNow()}\r\n            </span>\r\n            {!deleteUserClass && (\r\n              <Fragment>\r\n                <Link to={`/user/${user.id}`}>\r\n                  <button type='button' className={cx('userRow__buttonEdit')}>\r\n                    <EditIcon className={cx('userRow__editIcon')} />\r\n                  </button>\r\n                </Link>\r\n                <button type='button' className={cx('userRow__buttonClose')}>\r\n                  <CloseIcon\r\n                    className={cx('userRow__closeIcon')}\r\n                    onClick={this.showDeleteButton}\r\n                  />\r\n                </button>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n          {deleteUserClass && (\r\n            <button type='button' className={cx('userRow__buttonDeleteUser')} onClick={deleteUser(user.id)}>\r\n              <div className={cx('userRow__deleteUserWrapper')}>\r\n                <CloseIcon className={cx('deleteUser')} />\r\n                delete\r\n              </div>\r\n            </button>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nUserRow.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  deleteUser: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default onClickOutside(UserRow)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/usersPage/userRow/UserRow.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/usersPage/userRow/UserRow.js	(date 1558904736509)
Index: src/pages/usersPage/UsersPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { push } from 'connected-react-router'\r\nimport styles from './UsersPage.scss'\r\nimport NoHaveUserRow from './noHaveUserRow/NoHaveUserRow'\r\nimport { fetchUsers, deleteUser, searchingUsers } from '../../actions/actionUsers'\r\nimport UserRow from './userRow/UserRow'\r\nimport { Pagination } from './pagination/Pagination'\r\nimport { getFilterUsers } from '../../helpers/getFilterUsers'\r\nimport { validateUsersUrl } from '../../helpers/validateUsersUrl'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass UsersPage extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      fetchUsers, search, push,\r\n    } = this.props\r\n    if (validateUsersUrl(search)) {\r\n      push('/not-found')\r\n    } else {\r\n      fetchUsers()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { pagesCount, per_page, push } = this.props\r\n    if (prevProps.pagesCount !== pagesCount && prevProps.pagesCount !== 0) {\r\n      push({ pathname: '/users', search: `?page=${pagesCount}&per_page=${per_page}` })\r\n    }\r\n  }\r\n\r\n  searchingUsersFilter = ({ target }) => {\r\n    const { searchingUsers } = this.props\r\n    const { value } = target\r\n    searchingUsers(value)\r\n  }\r\n\r\n  deleteUser = id => () => {\r\n    const { deleteUser } = this.props\r\n    deleteUser(id)\r\n  }\r\n\r\n  changePage = page => () => {\r\n    const {\r\n      per_page, push,\r\n    } = this.props\r\n    push({ pathname: '/users', search: `?page=${page}&per_page=${per_page}` })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      users, currentPage, filterUsers, pagesCount,\r\n    } = this.props\r\n    return (\r\n      <Fragment>\r\n        <h2 className={cx('headline')}>List of users</h2>\r\n        <input\r\n          className={cx('usersPage__search')}\r\n          type='search'\r\n          onChange={this.searchingUsersFilter}\r\n          value={filterUsers}\r\n        />\r\n        <table className={cx('usersPageTable container')}>\r\n          <thead className={cx('usersPage__thead')}>\r\n            <tr className={cx('usersPage__tr')}>\r\n              <th className={cx('usersPage__name')}>name</th>\r\n              <th className={cx('usersPage__company')}>company</th>\r\n              <th className={cx('usersPage__contacts')}>contacts</th>\r\n              <th className={cx('usersPage__update')}>last update</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className={cx('usersPage__trEmpty')} />\r\n            {users.length > 0 && users.map(user => (\r\n              <UserRow\r\n                key={user.id}\r\n                user={user}\r\n                deleteUser={this.deleteUser}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {users.length === 0 && <NoHaveUserRow />}\r\n        {pagesCount > 1 && (\r\n          <Pagination\r\n            pagesCount={pagesCount}\r\n            currentPage={currentPage}\r\n            changePage={this.changePage}\r\n            limit={5}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nUsersPage.propTypes = {\r\n  search: PropTypes.string,\r\n  users: PropTypes.array.isRequired,\r\n  per_page: PropTypes.number.isRequired,\r\n  pagesCount: PropTypes.number.isRequired,\r\n  push: PropTypes.func.isRequired,\r\n  fetchUsers: PropTypes.func.isRequired,\r\n  deleteUser: PropTypes.func.isRequired,\r\n  searchingUsers: PropTypes.func.isRequired,\r\n  filterUsers: PropTypes.string.isRequired,\r\n  currentPage: PropTypes.number,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { filterUsers } = state.usersReducer\r\n  const { search } = state.router.location\r\n  const userFilter = getFilterUsers(state)\r\n  return {\r\n    users: userFilter.users,\r\n    total: userFilter.total,\r\n    currentPage: userFilter.currentPage,\r\n    per_page: userFilter.per_page,\r\n    search,\r\n    filterUsers,\r\n    pagesCount: userFilter.pagesCount,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchUsers, push, deleteUser, searchingUsers,\r\n  },\r\n)(UsersPage)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/usersPage/UsersPage.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/usersPage/UsersPage.js	(date 1558904736509)
Index: src/pages/notFound/NotFound.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport classNames from 'classnames'\r\nimport styles from './NotFound.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nexport const NotFound = () => (\r\n  <h1 className={cx('notFound')}>NodFound 404!</h1>\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/notFound/NotFound.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/pages/notFound/NotFound.js	(date 1558904736509)
Index: src/saga/usersSaga.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n  put, call, select,\r\n} from 'redux-saga/effects'\r\nimport {\r\n  FETCH_USERS__SUCCESS,\r\n  FETCH_USERS__FAILURE,\r\n\r\n  DELETE_USER__SUCCESS,\r\n  DELETE_USER__FAILURE,\r\n\r\n  SEARCHING_USERS__SUCCESS,\r\n  SEARCHING_USERS__FAILURE,\r\n} from '../actions/actionUsers'\r\nimport db from '../db'\r\nimport { getUsersIndexDB } from '../helpers/getUsersIndexDB'\r\n\r\nexport function* fetchUsersSaga() {\r\n  try {\r\n    const users = yield call(getUsersIndexDB)\r\n    yield put({\r\n      type: FETCH_USERS__SUCCESS,\r\n      payload: {\r\n        users,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    yield put({\r\n      type: FETCH_USERS__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* deleteUserSaga(action) {\r\n  const { id } = action.payload\r\n  try {\r\n    db.usersDB.delete(id)\r\n    const usersRedux = yield select(state => state.usersReducer.users)\r\n    const users = usersRedux.filter(user => user.id !== id)\r\n    yield put({\r\n      type: DELETE_USER__SUCCESS,\r\n      payload: {\r\n        users,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    yield put({\r\n      type: DELETE_USER__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* searchingUsersSaga(action) {\r\n  const { filterUsers } = action.payload\r\n  try {\r\n    yield put({\r\n      type: SEARCHING_USERS__SUCCESS,\r\n      payload: {\r\n        filterUsers,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    yield put({\r\n      type: SEARCHING_USERS__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/saga/usersSaga.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/saga/usersSaga.js	(date 1558904736509)
Index: src/saga/newUserSaga.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n  put, select, call,\r\n} from 'redux-saga/effects'\r\nimport { push } from 'connected-react-router'\r\nimport {\r\n  SAVE_NEW_USER_DATA__SUCCESS,\r\n  SAVE_NEW_USER_DATA__FAILURE,\r\n\r\n  CREATE_USER__SUCCESS,\r\n  CREATE_USER__FAILURE,\r\n\r\n  CHANGE_QUESTION_STATE__OPEN,\r\n  CHANGE_QUESTION_STATE__CLOSE,\r\n  CHANGE_QUESTION_STATE__FAILURE,\r\n\r\n  CONTINUE_USER__CONTINUE,\r\n  CONTINUE_USER__CLOSE,\r\n  CONTINUE_USER__FAILURE,\r\n\r\n  CHANGE_AVATAR_ACCOUNT__SUCCESS,\r\n  CHANGE_AVATAR_ACCOUNT__FAILURE,\r\n\r\n  FORWARD_CAPABILITIES__ADD_NEW_USER,\r\n  FORWARD_CAPABILITIES__FAILURE,\r\n} from '../actions/actionNewUser'\r\nimport { initialNewUserState } from '../stubs/initialNewUserState'\r\nimport db from '../db'\r\n\r\nexport function* saveNewUserDataSaga(action) {\r\n  const { activeFormValue } = action.payload\r\n  try {\r\n    yield put({\r\n      type: SAVE_NEW_USER_DATA__SUCCESS,\r\n      payload: {\r\n        ...activeFormValue,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    yield put({\r\n      type: SAVE_NEW_USER_DATA__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* createUserSaga() {\r\n  try {\r\n    db.newUserDB.update(0, {\r\n      ...initialNewUserState,\r\n    })\r\n    yield put({\r\n      type: CREATE_USER__SUCCESS,\r\n      payload: initialNewUserState,\r\n    })\r\n  } catch (error) {\r\n    yield put({\r\n      type: CREATE_USER__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* changeQuestionStateSaga(action) {\r\n  const { isQuestion } = action.payload\r\n  try {\r\n    if (isQuestion) {\r\n      yield put({\r\n        type: CHANGE_QUESTION_STATE__CLOSE,\r\n      })\r\n    } else {\r\n      yield put({\r\n        type: CHANGE_QUESTION_STATE__OPEN,\r\n        payload: {\r\n          isQuestion: true,\r\n        },\r\n      })\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: CHANGE_QUESTION_STATE__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* continueUserSaga(action) {\r\n  const { isContinue } = action.payload\r\n  try {\r\n    if (isContinue) {\r\n      const newUser = yield call(() => db.newUserDB.get(0))\r\n      if (newUser.contactsFilled) {\r\n        yield put(push('/capabilities'))\r\n      } else if (newUser.profileFilled) {\r\n        yield put(push('/contacts'))\r\n      } else if (newUser.accountFilled) {\r\n        yield put(push('/profile'))\r\n      }\r\n      yield put({\r\n        type: CONTINUE_USER__CONTINUE,\r\n        payload: newUser,\r\n      })\r\n    } else {\r\n      yield put({\r\n        type: CONTINUE_USER__CLOSE,\r\n        payload: {\r\n          isQuestion: false,\r\n        },\r\n      })\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONTINUE_USER__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* changeAvatarAccountSaga(action) {\r\n  const { userSRCAvatarIMG } = action.payload\r\n  try {\r\n    yield put({\r\n      type: CHANGE_AVATAR_ACCOUNT__SUCCESS,\r\n      payload: {\r\n        userSRCAvatarIMG,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    yield put({\r\n      type: CHANGE_AVATAR_ACCOUNT__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* forwardCapabilitiesSaga(action) {\r\n  db.newUserDB.update(0, {\r\n    ...initialNewUserState,\r\n  })\r\n  const {\r\n    selectSkills, textareaField, checkboxArt, checkboxSport, checkboxJustWant,\r\n    checkboxFemale, checkboxGuitar, checkboxWtf,\r\n  } = action.payload\r\n  try {\r\n    const newUser = yield select(state => state.newUser)\r\n    delete newUser.isQuestion\r\n    delete newUser.id\r\n    delete newUser.accountFilled\r\n    delete newUser.profileFilled\r\n    delete newUser.contactsFilled\r\n    yield put(push('/users'))\r\n    db.usersDB.add({\r\n      ...newUser,\r\n      selectSkills,\r\n      textareaField,\r\n      checkboxArt,\r\n      checkboxSport,\r\n      checkboxJustWant,\r\n      checkboxFemale,\r\n      checkboxGuitar,\r\n      checkboxWtf,\r\n      lastUpdate: new Date(),\r\n    })\r\n    yield put({\r\n      type: FORWARD_CAPABILITIES__ADD_NEW_USER,\r\n      payload: {\r\n        newUser: initialNewUserState,\r\n      },\r\n    })\r\n  } catch\r\n  (error) {\r\n    yield put({\r\n      type: FORWARD_CAPABILITIES__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/saga/newUserSaga.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/saga/newUserSaga.js	(date 1558904736509)
Index: src/saga/editUserSaga.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n  put, call,\r\n} from 'redux-saga/effects'\r\nimport { push } from 'connected-react-router'\r\nimport {\r\n  FETCH_EDIT_USER__SUCCESS,\r\n  FETCH_EDIT_USER__FAILURE,\r\n\r\n  CHANGE_AVATAR_ACCOUNT_EDITING__SUCCESS,\r\n  CHANGE_AVATAR_ACCOUNT_EDITING__FAILURE,\r\n\r\n  SAVE_CHANGES_ACCOUNT_EDITING__FAILURE,\r\n  SAVE_CHANGES_PROFILE_EDITING__FAILURE,\r\n  SAVE_CHANGES_CONTACTS_EDITING__FAILURE,\r\n  SAVE_CHANGES_CAPABILITIES_EDITING__FAILURE,\r\n} from '../actions/actionEditUser'\r\nimport db from '../db'\r\nimport { getEditUserIndexDB } from '../helpers/getEditUserIndexDB'\r\n\r\nexport function* fetchEditUserSaga(action) {\r\n  const { id } = action.payload\r\n  try {\r\n    const editUser = yield call(getEditUserIndexDB, id)\r\n    if (editUser) {\r\n      yield put({\r\n        type: FETCH_EDIT_USER__SUCCESS,\r\n        payload: {\r\n          editUser,\r\n        },\r\n      })\r\n    } else {\r\n      yield put(push('/not-found'))\r\n    }\r\n  } catch (error) {\r\n    yield put(push('/not-found'))\r\n    yield put({\r\n      type: FETCH_EDIT_USER__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* changeAvatarAccountEditingSaga(action) {\r\n  const { userSRCAvatarIMG } = action.payload\r\n  try {\r\n    yield put({\r\n      type: CHANGE_AVATAR_ACCOUNT_EDITING__SUCCESS,\r\n      payload: {\r\n        userSRCAvatarIMG,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    yield put({\r\n      type: CHANGE_AVATAR_ACCOUNT_EDITING__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* saveChangesAccountEditingSaga(action) {\r\n  const {\r\n    userName, password, repeatPassword, userSRCAvatarIMG, id,\r\n  } = action.payload\r\n  try {\r\n    db.usersDB.update(id, {\r\n      userName,\r\n      password,\r\n      repeatPassword,\r\n      userSRCAvatarIMG,\r\n      lastUpdate: new Date(),\r\n    })\r\n    yield put(push(`/user/${id}`))\r\n  } catch\r\n  (error) {\r\n    yield put({\r\n      type: SAVE_CHANGES_ACCOUNT_EDITING__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* saveChangesProfileSaga(action) {\r\n  const {\r\n    firstName, lastName, birthDate, email, address, gender, id,\r\n  } = action.payload\r\n  try {\r\n    db.usersDB.update(id, {\r\n      firstName,\r\n      lastName,\r\n      birthDate,\r\n      email,\r\n      address,\r\n      gender,\r\n      lastUpdate: new Date(),\r\n    })\r\n    yield put(push(`/user/${id}`))\r\n  } catch\r\n  (error) {\r\n    yield put({\r\n      type: SAVE_CHANGES_PROFILE_EDITING__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* saveChangesContactsSaga(action) {\r\n  const {\r\n    company, githubLink, facebookLink, selectLanguage, fax, phoneArray, id,\r\n  } = action.payload\r\n  try {\r\n    db.usersDB.update(id, {\r\n      company,\r\n      githubLink,\r\n      facebookLink,\r\n      selectLanguage,\r\n      fax,\r\n      phoneArray,\r\n      lastUpdate: new Date(),\r\n    })\r\n    yield put(push(`/user/${id}`))\r\n  } catch\r\n  (error) {\r\n    yield put({\r\n      type: SAVE_CHANGES_CONTACTS_EDITING__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* saveChangesCapabilitiesSaga(action) {\r\n  const {\r\n    selectSkills, textareaField, checkboxArt, checkboxSport,\r\n    checkboxJustWant, checkboxFemale, checkboxGuitar, checkboxWtf, id,\r\n  } = action.payload\r\n  try {\r\n    db.usersDB.update(id, {\r\n      selectSkills,\r\n      textareaField,\r\n      checkboxArt,\r\n      checkboxSport,\r\n      checkboxJustWant,\r\n      checkboxFemale,\r\n      checkboxGuitar,\r\n      checkboxWtf,\r\n      lastUpdate: new Date(),\r\n    })\r\n    yield put(push(`/user/${id}`))\r\n  } catch\r\n  (error) {\r\n    yield put({\r\n      type: SAVE_CHANGES_CAPABILITIES_EDITING__FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/saga/editUserSaga.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/saga/editUserSaga.js	(date 1558904736509)
Index: src/saga/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { takeLatest, all } from 'redux-saga/effects'\r\nimport {\r\n  saveNewUserDataSaga,\r\n  createUserSaga,\r\n  changeQuestionStateSaga,\r\n  continueUserSaga,\r\n  changeAvatarAccountSaga,\r\n  forwardCapabilitiesSaga,\r\n} from './newUserSaga'\r\n\r\nimport {\r\n  fetchUsersSaga,\r\n  deleteUserSaga,\r\n  searchingUsersSaga,\r\n} from './usersSaga'\r\n\r\nimport {\r\n  fetchEditUserSaga,\r\n  changeAvatarAccountEditingSaga,\r\n  saveChangesAccountEditingSaga,\r\n  saveChangesProfileSaga,\r\n  saveChangesContactsSaga,\r\n  saveChangesCapabilitiesSaga,\r\n} from './editUserSaga'\r\n\r\nimport {\r\n  SAVE_NEW_USER_DATA,\r\n  CREATE_USER,\r\n  CHANGE_QUESTION_STATE,\r\n  CONTINUE_USER,\r\n  CHANGE_AVATAR_ACCOUNT,\r\n  FORWARD_CAPABILITIES,\r\n} from '../actions/actionNewUser'\r\n\r\nimport {\r\n  FETCH_USERS,\r\n  DELETE_USER,\r\n  SEARCHING_USERS,\r\n} from '../actions/actionUsers'\r\n\r\nimport {\r\n  FETCH_EDIT_USER,\r\n  CHANGE_AVATAR_ACCOUNT_EDITING,\r\n  SAVE_CHANGES_ACCOUNT_EDITING,\r\n  SAVE_CHANGES_PROFILE_EDITING,\r\n  SAVE_CHANGES_CONTACTS_EDITING,\r\n  SAVE_CHANGES_CAPABILITIES_EDITING,\r\n} from '../actions/actionEditUser'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    takeLatest(SAVE_NEW_USER_DATA, saveNewUserDataSaga),\r\n    takeLatest(CREATE_USER, createUserSaga),\r\n    takeLatest(CHANGE_QUESTION_STATE, changeQuestionStateSaga),\r\n    takeLatest(CONTINUE_USER, continueUserSaga),\r\n    takeLatest(CHANGE_AVATAR_ACCOUNT, changeAvatarAccountSaga),\r\n    takeLatest(FORWARD_CAPABILITIES, forwardCapabilitiesSaga),\r\n\r\n    takeLatest(FETCH_USERS, fetchUsersSaga),\r\n    takeLatest(DELETE_USER, deleteUserSaga),\r\n    takeLatest(SEARCHING_USERS, searchingUsersSaga),\r\n\r\n    takeLatest(FETCH_EDIT_USER, fetchEditUserSaga),\r\n    takeLatest(CHANGE_AVATAR_ACCOUNT_EDITING, changeAvatarAccountEditingSaga),\r\n    takeLatest(SAVE_CHANGES_ACCOUNT_EDITING, saveChangesAccountEditingSaga),\r\n    takeLatest(SAVE_CHANGES_PROFILE_EDITING, saveChangesProfileSaga),\r\n    takeLatest(SAVE_CHANGES_CONTACTS_EDITING, saveChangesContactsSaga),\r\n    takeLatest(SAVE_CHANGES_CAPABILITIES_EDITING, saveChangesCapabilitiesSaga),\r\n  ])\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/saga/index.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/saga/index.js	(date 1558904736509)
Index: src/components/cropperModalWindow/CropperModal.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Cropper from 'react-cropper'\r\nimport classNames from 'classnames'\r\nimport 'cropperjs/dist/cropper.css'\r\nimport styles from './CropperModal.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nclass CropperModal extends Component {\r\n  cropImage = () => {\r\n    const { changeAvatar, setCropperSrc } = this.props\r\n    if (typeof this.cropper.getCroppedCanvas() === 'undefined') {\r\n      return\r\n    }\r\n    setCropperSrc()\r\n    changeAvatar(this.cropper.getCroppedCanvas().toDataURL())\r\n  }\r\n\r\n  setCropper = cropper => {\r\n    this.cropper = cropper\r\n  }\r\n\r\n  render() {\r\n    const { cropperSrc, setCropperSrc } = this.props\r\n    return (\r\n      <Fragment>\r\n        <div className={cx('cropperModal__wrapper')}>\r\n          <Cropper\r\n            src={cropperSrc}\r\n            style={{\r\n              width: '962px',\r\n              height: '533px',\r\n              background: '#fff',\r\n            }}\r\n            aspectRatio={9 / 9}\r\n            guides={false}\r\n            background={false}\r\n            ref={this.setCropper}\r\n          />\r\n        </div>\r\n        <div className={cx('cropperModal__wrapperButton')}>\r\n          <button className={cx('cropperModal__close')} type='button' onClick={setCropperSrc} >\r\n            Close\r\n          </button>\r\n          <button className={cx('cropperModal__cropImage')} type='button' onClick={this.cropImage} >\r\n            Crop Image\r\n          </button>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nCropperModal.propTypes = {\r\n  cropperSrc: PropTypes.string,\r\n  setCropperSrc: PropTypes.func.isRequired,\r\n  changeAvatar: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CropperModal\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/cropperModalWindow/CropperModal.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/components/cropperModalWindow/CropperModal.js	(date 1558904736494)
Index: src/actions/actionNewUser.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const SAVE_NEW_USER_DATA = 'SAVE_NEW_USER_DATA'\r\nexport const SAVE_NEW_USER_DATA__SUCCESS = 'SAVE_NEW_USER_DATA__SUCCESS'\r\nexport const SAVE_NEW_USER_DATA__FAILURE = 'SAVE_NEW_USER_DATA__FAILURE'\r\n\r\nexport const FORWARD_CAPABILITIES = 'FORWARD_CAPABILITIES'\r\nexport const FORWARD_CAPABILITIES__ADD_NEW_USER = 'FORWARD_BACK_CAPABILITIES__FORWARD__ADD_NEW_USER'\r\nexport const FORWARD_CAPABILITIES__FAILURE = 'FORWARD_CAPABILITIES__FAILURE'\r\n\r\nexport const CREATE_USER = 'CREATE_USER'\r\nexport const CREATE_USER__SUCCESS = 'CREATE_USER__SUCCESS'\r\nexport const CREATE_USER__FAILURE = 'CREATE_USER__FAILURE'\r\n\r\nexport const CHANGE_QUESTION_STATE = 'CHANGE_QUESTION_STATE'\r\nexport const CHANGE_QUESTION_STATE__OPEN = 'CHANGE_QUESTION_STATE__OPEN'\r\nexport const CHANGE_QUESTION_STATE__CLOSE = 'CHANGE_QUESTION_STATE__CLOSE'\r\nexport const CHANGE_QUESTION_STATE__FAILURE = 'CHANGE_QUESTION_STATE__FAILURE'\r\n\r\nexport const CONTINUE_USER = 'CONTINUE_USER'\r\nexport const CONTINUE_USER__CONTINUE = 'CONTINUE_USER__CONTINUE'\r\nexport const CONTINUE_USER__CLOSE = 'CONTINUE_USER__CLOSE'\r\nexport const CONTINUE_USER__FAILURE = 'CONTINUE_USER__FAILURE'\r\n\r\nexport const CHANGE_AVATAR_ACCOUNT = 'CHANGE_AVATAR_ACCOUNT'\r\nexport const CHANGE_AVATAR_ACCOUNT__SUCCESS = 'CHANGE_AVATAR_ACCOUNT__SUCCESS'\r\nexport const CHANGE_AVATAR_ACCOUNT__FAILURE = 'CHANGE_AVATAR_ACCOUNT__FAILURE'\r\n\r\nexport const saveNewUserData = activeFormValue => (\r\n  {\r\n    type: SAVE_NEW_USER_DATA,\r\n    payload: {\r\n      activeFormValue,\r\n    },\r\n  })\r\n\r\nexport const createUser = () => (\r\n  { type: CREATE_USER })\r\n\r\nexport const changeQuestionState = isQuestion => ({\r\n  type: CHANGE_QUESTION_STATE,\r\n  payload: {\r\n    isQuestion,\r\n  },\r\n})\r\n\r\nexport const continueUser = isContinue => (\r\n  {\r\n    type: CONTINUE_USER,\r\n    payload: {\r\n      isContinue,\r\n    },\r\n  })\r\n\r\nexport const changeAvatarAccount = userSRCAvatarIMG => (\r\n  {\r\n    type: CHANGE_AVATAR_ACCOUNT,\r\n    payload: {\r\n      userSRCAvatarIMG,\r\n    },\r\n  })\r\n\r\nexport const forwardCapabilities = (selectSkills, textareaField, checkboxArt, checkboxSport, checkboxJustWant,\r\n  checkboxFemale, checkboxGuitar, checkboxWtf) => (\r\n  {\r\n    type: FORWARD_CAPABILITIES,\r\n    payload: {\r\n      selectSkills,\r\n      textareaField,\r\n      checkboxArt,\r\n      checkboxSport,\r\n      checkboxJustWant,\r\n      checkboxFemale,\r\n      checkboxGuitar,\r\n      checkboxWtf,\r\n    },\r\n  })\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/actions/actionNewUser.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/actions/actionNewUser.js	(date 1558904736494)
Index: src/actions/actionUsers.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const FETCH_USERS = 'FETCH_USERS'\r\nexport const FETCH_USERS__SUCCESS = 'FETCH_USERS__SUCCESS'\r\nexport const FETCH_USERS__FAILURE = 'FETCH_USERS__FAILURE'\r\n\r\nexport const DELETE_USER = 'DELETE_USER'\r\nexport const DELETE_USER__SUCCESS = 'DELETE_USER__SUCCESS'\r\nexport const DELETE_USER__FAILURE = 'DELETE_USER__FAILURE'\r\n\r\nexport const SEARCHING_USERS = 'SEARCHING_USERS'\r\nexport const SEARCHING_USERS__SUCCESS = 'SEARCHING_USERS__SUCCESS'\r\nexport const SEARCHING_USERS__FAILURE = 'SEARCHING_USERS__FAILURE'\r\n\r\nexport const fetchUsers = () => ({\r\n  type: FETCH_USERS,\r\n})\r\n\r\nexport const deleteUser = id => (\r\n  {\r\n    type: DELETE_USER,\r\n    payload: {\r\n      id,\r\n    },\r\n  })\r\n\r\nexport const searchingUsers = filterUsers => (\r\n  {\r\n    type: SEARCHING_USERS,\r\n    payload: {\r\n      filterUsers,\r\n    },\r\n  })\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/actions/actionUsers.js	(revision 7c8a68445d4a7ead4ff59ae82830b8108cae852a)
+++ src/actions/actionUsers.js	(date 1558904736494)
